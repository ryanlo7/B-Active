var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["0.0.0.0","7.0.3","angular","app","artifact","automat","bactiveangular","build","chang","check","cli","code","compon","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","e2","end","execut","file","flag","further","gener","go","help","host","http://localhost:4200","index","karma","match","more","name","navig","new","ng","out","prod","product","project","protractor","readm","reload","result","run","scaffold","serv","server","sourc","store","test","unit","us","version","via"],"overview.html":["1","2","3","4","5","6","browser","class","compon","inject","interfac","match","modul","out","overview","reset","result","rout","support","svg","zoom"],"modules.html":["appmodul","approutingmodul","brows","browser","match","modul","result","support","svg"],"modules/AppModule.html":["angular/common/http","angular/cor","angular/form","angular/platform","app","app.compon","appcompon","appmodul","approutingmodul","bootstrap","browser","browsermodul","class","declar","edit/edit.compon","editcompon","events/events.compon","eventscompon","export","file","formsmodul","httpclientmodul","import","info","match","matches/matches.compon","matchescompon","modul","navbar/navbar.compon","navbarcompon","ngmodul","out","profile/profile.compon","profilecompon","provid","reset","result","routing.modul","sourc","src/app/app.module.t","support","svg","zoom"],"modules/AppRoutingModule.html":["angular/cor","angular/rout","approutingmodul","browser","class","compon","const","edit","edit/edit.compon","editcompon","event","events/events.compon","eventscompon","export","file","import","info","match","matches/matches.compon","matchescompon","modul","ngmodul","out","paramschang","path","profile/:id","profile/profile.compon","profilecompon","reset","result","rout","routermodul","routermodule.forroot(rout","routing.module.t","runguardsandresolv","sourc","src/app/app","support","svg","true","usehash","zoom"],"components/AppComponent.html":["angular","angular/cor","app","app.component.css","app.component.html","appcompon","bactiv","class","compon","default","export","file","import","info","match","metadata","properti","result","root","selector","sourc","src/app/app.component.t","string","styleurl","templateurl","titl","valu"],"components/EditComponent.html":["0","1","2","3","4","5","activ","add","addact","allow","angular/cor","angular/rout","api","app","avail","back","base64","base64url","base64url.replac","basketbal","calcul","calculater","check","cho","class","click","climb","code","col","compon","constructor","constructor(priv","constructor(userservic","creat","cs144","default","delet","deleteact","deleteactivity(nam","edit","edit.component.css","edit.component.html","editcompon","editcomponent'","export","fetch","file","filltablehead","for(let","frisbe","function","g","half","handl","handlecheckclick","handlecheckclick(row","happen","hour","implement","import","index","info","initialis","json","json.parse(atob(base64","jwt","lift","match","metadata","method","name","navig","newact","ngoninit","null","number","object","oninit","param","paramet","pars","parsejwt(document.cookie).userid","parsejwt(token","popul","possibleact","privat","professor","profil","project","properti","rate","ratingscal","replace(/_/g","repres","result","return","router","run","selector","soccer","sourc","squash","src/app/edit/edit.component.t","string","styleurl","subscribe(us","swim","tabl","tablehead","templateurl","tenni","thennavig","this.filltablehead","this.router.navigate([`/profile/${this.userid","this.updateprofil","this.us","this.user.act","this.user.avail","this.user.nam","this.userid","this.userservice.changename(this.user.userid","this.userservice.fetchus","this.userservice.getuser(this.userid","this.userservice.updateactivities(this.user.userid","this.userservice.updateavailability(this.user.userid","time","token","token.split('.')[1","updat","updateprofil","updateprofileandreturn","user","user'","user.servic","userid","userservic","void","volleybal","web"],"components/EventsComponent.html":["0","047c","1","2","3","3d3a","4","41b3","4853","5","814d00b86d2a%7d/uploads/bigstock","81799844_(1).jpg","8896","92f2","activ","allow","angular/cor","api","app","argument","array","balls.jpg","base64","base64url","base64url.replac","bb6a87601341.jpg","beach","boolean","catch.jpg","cho","class","code","compon","confirm","confirmedev","console.log(this.user.events[i].rated.length","constructor","constructor(priv","constructor(userservic","content/uploads/2013/02/adult","content/uploads/2015/10/ultim","content/uploads/2017/07/running.jpg","content/uploads/2018/02/stock","content/uploads/2018/02/tenni","courses1","creat","cs144","current","date","date.now","detail","determin","e1360807803429.jpg","end","enddat","entri","event","eventid","events.component.css","events.component.html","eventscompon","export","fals","fetch","file","first","for(let","frisbe","function","g","get","getactivityurl","getactivityurl(nam","getusernam","getusername(userid","hashmap","http://lisabaylis.com/wp/wp","http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg","http://yourboulder.com/wp","https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg","https://cdn.swimswam.com/wp","https://childlikefaith.com/wp","https://data.englandsquash.com/files?filename=0600776f","https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694","https://tennisracquetcentral.com/wp","https://www.longbeachny.gov/vertical/sites/%7bc3c1054a","id","if(this.ratedevents.indexof(eventid","ihash","imag","imagemap","implement","import","info","initialis","interfac","invitedids[0","invitedids[1","ispastev","ispastevent(endd","jhash","json.parse(atob(base64","jwt","ldm_1946.jpg","lewi","match","matchescomponent'","metadata","method","mike","name","ngoninit","notrat","notrated(eventid","null","number","oninit","otherid","otherparticip","otherparticipant(invitedid","param","paramet","parsejwt(document.cookie).userid","parsejwt(token","particip","past","professor","project","properti","rate","ratedev","rateeid","rateus","rateuser(otherid","ratingscal","replace(/_/g","repres","result","return","run","same","score","selector","show","silhouett","sourc","src/app/events/events.component.t","store","string","styleurl","subscribe(confirmedev","subscribe(us","templateurl","this.confirmedev","this.imagemap[\"basketbal","this.imagemap[\"climb","this.imagemap[\"frisbe","this.imagemap[\"lift","this.imagemap[\"run","this.imagemap[\"socc","this.imagemap[\"squash","this.imagemap[\"swim","this.imagemap[\"tenni","this.imagemap[\"volleybal","this.ratedevents.push(eventid","this.us","this.userid","this.userservice.fetchconfirmedevents(this.userid","this.userservice.fetchus","this.userservice.getconfirmedev","this.userservice.getuser(this.userid","this.userservice.rateuser(this.userid","token.split('.')[1","true","url","user","user'","user.servic","userid","userservic","valu","void","volleybal","whether"],"components/MatchesComponent.html":["0","1","4","accept","accepted,chang","acceptev","acceptevent(eventid","add","allow","angular/cor","api","app","array","base64","base64url","base64url.replac","boolean","chang","cho","class","code","compon","confirm","confirmedev","console.log(confirm","console.log(match","console.log(pend","constructor","constructor(priv","constructor(userservic","creat","cs144","declineev","declineevent(eventid","event","eventid","eventto","export","fals","fetch","file","for(let","found","function","g","get","getusernam","getusername(userid","given","hasnotaccept","hasnotaccepted(eventid","id","implement","import","info","initialis","invit","invitedids[0","invitedids[1","json.parse(atob(base64","jwt","match","matchedev","matches.component.css","matches.component.html","matchescompon","matchescomponent'","metadata","method","name","ngoninit","null","number","oninit","otherparticip","otherparticipant(invitedid","otherwis","param","paramet","parsejwt(document.cookie).userid","parsejwt(token","particip","pend","pendingev","professor","project","properti","remov","replace(/_/g","repres","result","return","run","same","search","see","selector","set","sourc","src/app/matches/matches.component.t","statu","string","styleurl","subscribe(confirm","subscribe(match","subscribe(pend","subscribe(us","templateurl","this.confirmedev","this.matchedev","this.pendingev","this.us","this.userid","this.userservice.fetchconfirmedevents(this.userid","this.userservice.fetchmatchedevents(this.userid","this.userservice.fetchpendingevents(this.userid","this.userservice.fetchus","this.userservice.getconfirmedev","this.userservice.getmatchedev","this.userservice.getpendingev","this.userservice.getuser(this.userid","this.userservice.getuser(userid","through","token.split('.')[1","true","user","user.nam","user.servic","userid","userservic","var","void"],"components/NavbarComponent.html":["4","angular/cor","angular/rout","api","app","bar","base64","base64url","base64url.replac","cho","class","click","code","compon","constructor","constructor(userservic","creat","cs144","editcomponent'","event","export","fetch","file","function","g","handleev","handlematch","handleprofil","implement","import","info","initialis","json.parse(atob(base64","jwt","match","metadata","method","navbar","navbar.component.css","navbar.component.html","navbarcompon","navig","ngoninit","null","number","oninit","page","param","paramet","parsejwt(document.cookie).userid","parsejwt(token","privat","professor","profil","project","properti","replace(/_/g","repres","result","return","rout","router","run","selector","sourc","src/app/navbar/navbar.component.t","styleurl","subscribe(us","templateurl","this.router.navigate(['/ev","this.router.navigate(['/match","this.router.navigate([`/profile/${this.userid","this.us","this.userid","this.userservice.fetchus","this.userservice.getuser(this.userid","token.split('.')[1","top","user","user.servic","userid","userservic","void"],"components/ProfileComponent.html":["0","00","047c","3d3a","4","41b3","4853","814d00b86d2a%7d/uploads/bigstock","81799844_(1).jpg","8896","92f2","activ","activatedrout","activedrout","allow","angular/cor","angular/rout","api","app","avail","balls.jpg","base64","base64url","base64url.replac","bb6a87601341.jpg","beach","boolean","calcul","calculater","catch.jpg","cho","class","click","code","compon","const","constructor","constructor(priv","constructor(userservic","content/uploads/2013/02/adult","content/uploads/2015/10/ultim","content/uploads/2017/07/running.jpg","content/uploads/2018/02/stock","content/uploads/2018/02/tenni","convert","courses1","creat","cs144","default","display","e1360807803429.jpg","edit","editcomponent'","export","fals","fetch","file","fill","filltablehead","frisbe","function","g","get","getactivityurl","getactivityurl(nam","half","handleedit","hash","hour","http://lisabaylis.com/wp/wp","http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg","http://yourboulder.com/wp","https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg","https://cdn.swimswam.com/wp","https://childlikefaith.com/wp","https://data.englandsquash.com/files?filename=0600776f","https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694","https://tennisracquetcentral.com/wp","https://www.longbeachny.gov/vertical/sites/%7bc3c1054a","id","ihash","imag","imagemap","implement","import","info","initialis","json","json.parse(atob(base64","jwt","ldm_1946.jpg","led","lewi","link","map","match","metadata","method","mike","minut","name","navbar","ngoninit","null","number","object","oninit","page","param","paramet","pars","parsejwt(document.cookie).userid","parsejwt(token","popul","privat","professor","profil","profile.component.css","profile.component.html","profilecompon","profilecomponent.also","project","properti","public","publicview","rate","replace(/_/g","repres","result","return","rout","router","run","selector","silhouett","sourc","src/app/profile/profile.component.t","string","styleurl","subscribe(us","tabl","tablehead","templateurl","this.filltablehead","this.imagemap[\"basketbal","this.imagemap[\"climb","this.imagemap[\"frisbe","this.imagemap[\"lift","this.imagemap[\"run","this.imagemap[\"socc","this.imagemap[\"squash","this.imagemap[\"swim","this.imagemap[\"tenni","this.imagemap[\"volleybal","this.publicview","this.route.snapshot.parammap.get('id","this.route.snapshot.url.length","this.us","this.userid","this.userservice.fetchus","this.userservice.getuser(this.userid","time","token","token.split('.')[1","true","url","user","user.servic","userid","userservic","valu","view","void","volleybal","web"],"injectables/UserService.html":["0","180","48","7","acceptedid","activ","activity/:userid","angular/common/http","angular/cor","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","application/json","appropri","array","avail","availability/:userid","best","bodi","boolean","call","catcherror","chang","changename(userid","class","client","collect","comput","confirm","confirmedev","console.log(insert","const","constructor(priv","contain","content","correct","correspond","creat","cur.userid","current","databas","date","date(match.unix_time.getsecond","delet","deleteevent(removeeventid","descript","email","endtim","event","event).subscrib","event/:removeeventid","event/:userid","eventid","execut","exist","export","express","fals","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","find","finish","follow","for(let","found","function","getconfirmedev","getev","getmatchedev","getpendingev","getuser(userid","given","header","http","http://localhost:3000/api","http://localhost:3000/match","httpclient","httpheader","id","import","info","initi","inject","input","insert","insert).pip","insert).subscrib","instead","interest","invit","invitedid","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matchurl","name","name/:userid","new","newnam","none","null","number","numrat","object","observ","onc","option","output","param","pend","pendingev","popul","post","prior","privat","promis","properti","provid","providedin","put","rate","re","removeeventid","repres","request","requir","responsetyp","result","return","root","rout","rxj","rxjs/oper","score","scoresum","search","server","servic","set","side","skill","sourc","src/app/user.service.t","starttim","statu","string","tap","tap(r","text","that'","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.matchedev","this.matchurl}/${userid","this.pendingev","this.us","this.users.find(cur","this.users.length","time","type","undefin","unix_tim","updat","updateactivities(userid","updateavailability(userid","url","us","user","userid","userservic","var","void","whose"],"routes.html":["compon","edit","editcompon","event","eventscompon","match","matchescompon","path","pathmatch","profile/:id","profilecompon","redirectto","result","rout"],"classes/Activity.html":["0","180","48","7","acceptedid","activ","activity/:userid","angular/common/http","angular/cor","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","application/json","appropri","array","avail","availability/:userid","best","bodi","boolean","call","catcherror","chang","changename(userid","class","client","collect","comput","confirm","confirmedev","console.log(insert","const","constructor(priv","contain","content","correct","correspond","creat","cur.userid","current","databas","date","date(match.unix_time.getsecond","delet","deleteevent(removeeventid","descript","email","endtim","event","event).subscrib","event/:removeeventid","event/:userid","eventid","execut","exist","export","express","fals","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","find","finish","follow","for(let","found","function","getconfirmedev","getev","getmatchedev","getpendingev","getuser(userid","given","header","http","http://localhost:3000/api","http://localhost:3000/match","httpclient","httpheader","id","import","info","initi","inject","input","insert","insert).pip","insert).subscrib","instead","interest","invit","invitedid","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matchurl","name","name/:userid","new","newnam","none","null","number","numrat","object","observ","onc","option","output","param","pend","pendingev","popul","post","prior","privat","promis","properti","provid","providedin","put","rate","re","removeeventid","repres","request","requir","responsetyp","result","return","root","rout","rxj","rxjs/oper","score","scoresum","search","server","servic","set","side","skill","sourc","src/app/user.service.t","starttim","statu","string","tap","tap(r","text","that'","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.matchedev","this.matchurl}/${userid","this.pendingev","this.us","this.users.find(cur","this.users.length","time","type","undefin","unix_tim","updat","updateactivities(userid","updateavailability(userid","url","us","user","userid","userservic","var","void","whose"],"classes/AppPage.html":["apppag","browser","browser.get","class","e2e/src/app.po.t","element","element(by.css('app","export","file","getparagraphtext","h1')).gettext","import","info","match","method","navigateto","protractor","result","return","root","sourc","void"],"classes/Event.html":["0","180","48","7","acceptedid","activ","activity/:userid","angular/common/http","angular/cor","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","application/json","appropri","array","avail","availability/:userid","best","bodi","boolean","call","catcherror","chang","changename(userid","class","client","collect","comput","confirm","confirmedev","console.log(insert","const","constructor(priv","contain","content","correct","correspond","creat","cur.userid","current","databas","date","date(match.unix_time.getsecond","delet","deleteevent(removeeventid","descript","email","endtim","event","event).subscrib","event/:removeeventid","event/:userid","eventid","execut","exist","export","express","fals","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","find","finish","follow","for(let","found","function","getconfirmedev","getev","getmatchedev","getpendingev","getuser(userid","given","header","http","http://localhost:3000/api","http://localhost:3000/match","httpclient","httpheader","id","import","info","initi","inject","input","insert","insert).pip","insert).subscrib","instead","interest","invit","invitedid","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matchurl","name","name/:userid","new","newnam","none","null","number","numrat","object","observ","onc","option","output","param","pend","pendingev","popul","post","prior","privat","promis","properti","provid","providedin","put","rate","re","removeeventid","repres","request","requir","responsetyp","result","return","root","rout","rxj","rxjs/oper","score","scoresum","search","server","servic","set","side","skill","sourc","src/app/user.service.t","starttim","statu","string","tap","tap(r","text","that'","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.matchedev","this.matchurl}/${userid","this.pendingev","this.us","this.users.find(cur","this.users.length","time","type","undefin","unix_tim","updat","updateactivities(userid","updateavailability(userid","url","us","user","userid","userservic","var","void","whose"],"classes/Match.html":["0","180","48","7","acceptedid","activ","activity/:userid","angular/common/http","angular/cor","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","application/json","appropri","array","avail","availability/:userid","best","bodi","boolean","call","catcherror","chang","changename(userid","class","client","collect","comput","confirm","confirmedev","console.log(insert","const","constructor(priv","contain","content","correct","correspond","creat","cur.userid","current","databas","date","date(match.unix_time.getsecond","delet","deleteevent(removeeventid","descript","email","endtim","event","event).subscrib","event/:removeeventid","event/:userid","eventid","execut","exist","export","express","fals","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","find","finish","follow","for(let","found","function","getconfirmedev","getev","getmatchedev","getpendingev","getuser(userid","given","header","http","http://localhost:3000/api","http://localhost:3000/match","httpclient","httpheader","id","import","info","initi","inject","input","insert","insert).pip","insert).subscrib","instead","interest","invit","invitedid","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matchurl","name","name/:userid","new","newnam","none","null","number","numrat","object","observ","onc","option","output","param","pend","pendingev","popul","post","prior","privat","promis","properti","provid","providedin","put","rate","re","removeeventid","repres","request","requir","responsetyp","result","return","root","rout","rxj","rxjs/oper","score","scoresum","search","server","servic","set","side","skill","sourc","src/app/user.service.t","starttim","statu","string","tap","tap(r","text","that'","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.matchedev","this.matchurl}/${userid","this.pendingev","this.us","this.users.find(cur","this.users.length","time","type","undefin","unix_tim","updat","updateactivities(userid","updateavailability(userid","url","us","user","userid","userservic","var","void","whose"],"classes/User.html":["0","180","48","7","acceptedid","activ","activity/:userid","angular/common/http","angular/cor","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","application/json","appropri","array","avail","availability/:userid","best","bodi","boolean","call","catcherror","chang","changename(userid","class","client","collect","comput","confirm","confirmedev","console.log(insert","const","constructor(priv","contain","content","correct","correspond","creat","cur.userid","current","databas","date","date(match.unix_time.getsecond","delet","deleteevent(removeeventid","descript","email","endtim","event","event).subscrib","event/:removeeventid","event/:userid","eventid","execut","exist","export","express","fals","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","find","finish","follow","for(let","found","function","getconfirmedev","getev","getmatchedev","getpendingev","getuser(userid","given","header","http","http://localhost:3000/api","http://localhost:3000/match","httpclient","httpheader","id","import","info","initi","inject","input","insert","insert).pip","insert).subscrib","instead","interest","invit","invitedid","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matchurl","name","name/:userid","new","newnam","none","null","number","numrat","object","observ","onc","option","output","param","pend","pendingev","popul","post","prior","privat","promis","properti","provid","providedin","put","rate","re","removeeventid","repres","request","requir","responsetyp","result","return","root","rout","rxj","rxjs/oper","score","scoresum","search","server","servic","set","side","skill","sourc","src/app/user.service.t","starttim","statu","string","tap","tap(r","text","that'","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.matchedev","this.matchurl}/${userid","this.pendingev","this.us","this.users.find(cur","this.users.length","time","type","undefin","unix_tim","updat","updateactivities(userid","updateavailability(userid","url","us","user","userid","userservic","var","void","whose"],"interfaces/IHash.html":["0","00","047c","3d3a","4","41b3","4853","814d00b86d2a%7d/uploads/bigstock","81799844_(1).jpg","8896","92f2","activ","activatedrout","activedrout","allow","angular/cor","angular/rout","api","app","avail","balls.jpg","base64","base64url","base64url.replac","bb6a87601341.jpg","beach","boolean","catch.jpg","cho","class","code","compon","const","constructor(priv","content/uploads/2013/02/adult","content/uploads/2015/10/ultim","content/uploads/2017/07/running.jpg","content/uploads/2018/02/stock","content/uploads/2018/02/tenni","convert","courses1","creat","cs144","detail","display","e1360807803429.jpg","edit","editcomponent'","export","fals","fetch","file","fill","filltablehead","frisbe","function","g","half","hash","hour","http://lisabaylis.com/wp/wp","http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg","http://yourboulder.com/wp","https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg","https://cdn.swimswam.com/wp","https://childlikefaith.com/wp","https://data.englandsquash.com/files?filename=0600776f","https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694","https://tennisracquetcentral.com/wp","https://www.longbeachny.gov/vertical/sites/%7bc3c1054a","id","ihash","imagemap","implement","import","index","info","initialis","interfac","json","json.parse(atob(base64","jwt","ldm_1946.jpg","led","lewi","link","map","match","mike","minut","ngoninit","null","number","object","oninit","page","param","pars","parsejwt(document.cookie).userid","parsejwt(token","popul","privat","professor","profil","profile.component.css","profile.component.html","profilecompon","project","public","publicview","replace(/_/g","repres","result","return","rout","router","run","selector","silhouett","sourc","src/app/profile/profile.component.t","string","styleurl","subscribe(us","tabl","tablehead","templateurl","this.filltablehead","this.imagemap[\"basketbal","this.imagemap[\"climb","this.imagemap[\"frisbe","this.imagemap[\"lift","this.imagemap[\"run","this.imagemap[\"socc","this.imagemap[\"squash","this.imagemap[\"swim","this.imagemap[\"tenni","this.imagemap[\"volleybal","this.publicview","this.route.snapshot.parammap.get('id","this.route.snapshot.url.length","this.us","this.userid","this.userservice.fetchus","this.userservice.getuser(this.userid","time","token","token.split('.')[1","true","user","user.servic","userid","userservic","view","void","volleybal","web"],"interfaces/JHash.html":["0","047c","1","2","3","3d3a","4","41b3","4853","5","814d00b86d2a%7d/uploads/bigstock","81799844_(1).jpg","8896","92f2","activ","allow","angular/cor","api","app","argument","balls.jpg","base64","base64url","base64url.replac","bb6a87601341.jpg","beach","boolean","catch.jpg","cho","class","code","compon","confirm","confirmedev","console.log(this.user.events[i].rated.length","constructor(priv","content/uploads/2013/02/adult","content/uploads/2015/10/ultim","content/uploads/2017/07/running.jpg","content/uploads/2018/02/stock","content/uploads/2018/02/tenni","courses1","creat","cs144","current","date","date.now","descript","detail","determin","e1360807803429.jpg","end","enddat","entri","event","eventid","events.component.css","events.component.html","eventscompon","export","fals","fetch","file","first","for(let","frisbe","function","g","hashmap","http://lisabaylis.com/wp/wp","http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg","http://yourboulder.com/wp","https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg","https://cdn.swimswam.com/wp","https://childlikefaith.com/wp","https://data.englandsquash.com/files?filename=0600776f","https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694","https://tennisracquetcentral.com/wp","https://www.longbeachny.gov/vertical/sites/%7bc3c1054a","id","if(this.ratedevents.indexof(eventid","ihash","imag","imagemap","implement","import","index","info","initialis","interfac","invitedids[0","invitedids[1","ispastevent(endd","jhash","json.parse(atob(base64","jwt","ldm_1946.jpg","lewi","match","matchescomponent'","mike","name","ngoninit","notrated(eventid","null","number","oninit","otherid","otherparticipant(invitedid","param","parsejwt(document.cookie).userid","parsejwt(token","particip","past","professor","project","rate","ratedev","rateeid","rateuser(otherid","ratingscal","replace(/_/g","repres","result","return","run","same","score","selector","show","silhouett","sourc","src/app/events/events.component.t","store","string","styleurl","subscribe(confirmedev","subscribe(us","templateurl","this.confirmedev","this.imagemap[\"basketbal","this.imagemap[\"climb","this.imagemap[\"frisbe","this.imagemap[\"lift","this.imagemap[\"run","this.imagemap[\"socc","this.imagemap[\"squash","this.imagemap[\"swim","this.imagemap[\"tenni","this.imagemap[\"volleybal","this.ratedevents.push(eventid","this.us","this.userid","this.userservice.fetchconfirmedevents(this.userid","this.userservice.fetchus","this.userservice.getconfirmedev","this.userservice.getuser(this.userid","this.userservice.rateuser(this.userid","token.split('.')[1","true","url","user","user'","user.servic","userid","userservic","valu","void","volleybal","whether"],"miscellaneous.html":["context","environ","header","match","miscellan","option","requir","result","variabl"],"coverage.html":["0","0/0","0/2","0/3","15","3/6","4/10","40","42","45","5/11","50","53","6/14","7/13","activ","appcompon","apppag","class","compon","coverag","document","e2e/src/app.po.t","editcompon","event","eventscompon","file","identifi","ihash","inject","interfac","jhash","match","matchescompon","navbarcompon","profilecompon","project","result","src/app/app.component.t","src/app/edit/edit.component.t","src/app/events/events.component.t","src/app/matches/matches.component.t","src/app/navbar/navbar.component.t","src/app/profile/profile.component.t","src/app/user.service.t","statement","type","user","userservic"]},"length":22},"tokenStore":{"root":{"0":{"0":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}},"4":{"7":{"docs":{},"c":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"docs":{}},"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629},"coverage.html":{"ref":"coverage.html","tf":0.11494252873563218}},".":{"0":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}},"docs":{}}},"docs":{}}},"docs":{}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05747126436781609}}},"docs":{}}},"1":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"8":{"0":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.009404388714733543},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"d":{"3":{"docs":{},"a":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"docs":{}},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}}},"4":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"1":{"docs":{},"b":{"3":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"8":{"5":{"3":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}},"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}},"/":{"1":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}}},"7":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},".":{"0":{"docs":{},".":{"3":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}},"docs":{}}},"docs":{}},"/":{"1":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}}},"8":{"1":{"4":{"docs":{},"d":{"0":{"0":{"docs":{},"b":{"8":{"6":{"docs":{},"d":{"2":{"docs":{},"a":{"docs":{},"%":{"7":{"docs":{},"d":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"7":{"9":{"9":{"8":{"4":{"4":{"docs":{},"_":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"9":{"6":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}},"docs":{}},"docs":{}},"9":{"2":{"docs":{},"f":{"2":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}}},"docs":{}},"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.030612244897959183},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.06666666666666667},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.024390243902439}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.06666666666666667},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.028169014084507}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.06097560975609756},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.0588235294117645},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}},"i":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018912529550827423},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.018912529550827423},"classes/Event.html":{"ref":"classes/Event.html","tf":0.018912529550827423},"classes/Match.html":{"ref":"classes/Match.html","tf":0.018912529550827423},"classes/User.html":{"ref":"classes/User.html","tf":0.018912529550827423},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.013262599469496022},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.030732860520094562},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.030732860520094562},"classes/Event.html":{"ref":"classes/Event.html","tf":0.030732860520094562},"classes/Match.html":{"ref":"classes/Match.html","tf":0.030732860520094562},"classes/User.html":{"ref":"classes/User.html","tf":0.030732860520094562}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.03355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.012048192771084338},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.024822695035460994},"classes/Activity.html":{"ref":"classes/Activity.html","tf":5.026004728132388},"classes/Event.html":{"ref":"classes/Event.html","tf":0.024822695035460994},"classes/Match.html":{"ref":"classes/Match.html","tf":0.024822695035460994},"classes/User.html":{"ref":"classes/User.html","tf":0.024822695035460994},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.01856763925729443}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.020134228187919462},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.01182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.01182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.01182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.01182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}}}}}}},"k":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154}}}},"s":{"docs":{},"e":{"6":{"4":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}},"docs":{}},"docs":{}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"r":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.05102040816326531}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.13333333333333333}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.13333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.010610079575596816},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}}}},"d":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}},"b":{"6":{"docs":{},"a":{"8":{"7":{"6":{"0":{"1":{"3":{"4":{"1":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}},"o":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.030612244897959183}},"c":{"docs":{},"k":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}},"m":{"docs":{},"b":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018912529550827423},"classes/Activity.html":{"ref":"classes/Activity.html","tf":5.020094562647754},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.0588235294117645},"classes/Event.html":{"ref":"classes/Event.html","tf":5.020094562647754},"classes/Match.html":{"ref":"classes/Match.html","tf":5.020094562647754},"classes/User.html":{"ref":"classes/User.html","tf":5.020094562647754},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943},"coverage.html":{"ref":"coverage.html","tf":0.05747126436781609}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.030612244897959183},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.07042253521126761},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.069767441860465},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":5.0134228187919465},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":5.009090909090909},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":5.010610079575597},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.014563106796117},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":5.0120481927710845},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943},"coverage.html":{"ref":"coverage.html","tf":0.06896551724137931}}}},"u":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014184397163120567},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.014184397163120567},"classes/Event.html":{"ref":"classes/Event.html","tf":0.014184397163120567},"classes/Match.html":{"ref":"classes/Match.html","tf":0.014184397163120567},"classes/User.html":{"ref":"classes/User.html","tf":0.014184397163120567},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0070921985815602835},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0070921985815602835},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0070921985815602835},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0070921985815602835},"classes/User.html":{"ref":"classes/User.html","tf":0.0070921985815602835},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"2":{"0":{"1":{"3":{"docs":{},"/":{"0":{"2":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"docs":{}},"docs":{}}},"5":{"docs":{},"/":{"1":{"0":{"docs":{},"/":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"docs":{}},"docs":{}}},"7":{"docs":{},"/":{"0":{"7":{"docs":{},"/":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"8":{"docs":{},"/":{"0":{"2":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.011494252873563}}}}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169}}}}}}}}},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.02364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.02364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.02364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.02364066193853428}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"s":{"1":{"4":{"4":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}},"docs":{}},"docs":{}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.013422818791946308},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.011363636363636364},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.009404388714733543},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"x":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}},"e":{"1":{"3":{"6":{"0":{"8":{"0":{"7":{"8":{"0":{"3":{"4":{"2":{"9":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.04081632653061224},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.2222222222222222}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"/":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":5.016778523489933},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.05},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.0636604774535809},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05555555555555555},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.05555555555555555},"classes/Event.html":{"ref":"classes/Event.html","tf":5.056737588652482},"classes/Match.html":{"ref":"classes/Match.html","tf":0.05555555555555555},"classes/User.html":{"ref":"classes/User.html","tf":0.05555555555555555},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.04075235109717868},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.040880503144654086},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":5.006818181818182},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.020454545454545454},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.013262599469496022},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.018808777429467086},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0220125786163522}}}},"t":{"docs":{},"o":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}},"/":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"l":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.038834951456310676},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.01182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.01182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.01182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.01182033096926714}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}},"g":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.04081632653061224}}}}},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.010610079575596816},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.08823529411764706}}}}}}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}},"h":{"1":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}}}},"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.030612244897959183}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}},"u":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"3":{"0":{"0":{"0":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"0":{"5":{"docs":{},"/":{"1":{"7":{"docs":{},"/":{"2":{"3":{"docs":{},"/":{"1":{"6":{"docs":{},"/":{"7":{"2":{"9":{"docs":{},"_":{"4":{"8":{"6":{"docs":{},"_":{"5":{"9":{"3":{"6":{"5":{"1":{"7":{"docs":{},"d":{"8":{"docs":{},"d":{"2":{"8":{"8":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"a":{"docs":{},"k":{"5":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"/":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"/":{"1":{"8":{"1":{"1":{"3":{"2":{"4":{"5":{"docs":{},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"/":{"1":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"c":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"?":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"0":{"6":{"0":{"0":{"7":{"7":{"6":{"docs":{},"f":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"1":{"docs":{},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"5":{"3":{"docs":{},"d":{"docs":{},"e":{"6":{"9":{"2":{"6":{"docs":{},"e":{"4":{"docs":{},"b":{"0":{"6":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"1":{"2":{"7":{"docs":{},"b":{"3":{"docs":{},"e":{"docs":{},"c":{"docs":{},"d":{"docs":{},"/":{"docs":{},"t":{"docs":{},"/":{"5":{"6":{"docs":{},"c":{"5":{"1":{"docs":{},"c":{"docs":{},"b":{"6":{"5":{"5":{"5":{"9":{"8":{"6":{"docs":{},"e":{"docs":{},"f":{"3":{"4":{"7":{"docs":{},"a":{"docs":{},"e":{"6":{"docs":{},"b":{"docs":{},"a":{"docs":{},"/":{"1":{"4":{"5":{"5":{"7":{"5":{"8":{"5":{"2":{"5":{"6":{"9":{"4":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"v":{"docs":{},"/":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"%":{"7":{"docs":{},"b":{"docs":{},"c":{"3":{"docs":{},"c":{"1":{"0":{"5":{"4":{"docs":{},"a":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}},"s":{"docs":{},"h":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.009404388714733543},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.00354609929078},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.013636363636363636},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":5.004149377593361},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":5.0251572327044025},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.010610079575596816},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}},"s":{"docs":{},"[":{"0":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}},"1":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.15853658536585366},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.09859154929577464},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.012048192771084338},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.016597510373443983},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"a":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.015060240963855422},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.025},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.03713527851458886},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.024096385542168676},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014184397163120567},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.014184397163120567},"classes/Event.html":{"ref":"classes/Event.html","tf":0.014184397163120567},"classes/Match.html":{"ref":"classes/Match.html","tf":0.014184397163120567},"classes/User.html":{"ref":"classes/User.html","tf":0.014184397163120567},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.03319502074688797},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.015723270440251572}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":5.008298755186722},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules.html":{"ref":"modules.html","tf":0.13333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.04225352112676056},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.021220159151193633},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.022458628841607566},"routes.html":{"ref":"routes.html","tf":0.17647058823529413},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.022458628841607566},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705},"classes/Event.html":{"ref":"classes/Event.html","tf":0.022458628841607566},"classes/Match.html":{"ref":"classes/Match.html","tf":5.0236406619385345},"classes/User.html":{"ref":"classes/User.html","tf":0.022458628841607566},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":5.013262599469496},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}}}}}},".":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"x":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"p":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":10.066666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.012195121951219},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.014084507042254}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.055555555555555}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.026845637583892617},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010638297872340425},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.010638297872340425},"classes/Event.html":{"ref":"classes/Event.html","tf":0.010638297872340425},"classes/Match.html":{"ref":"classes/Match.html","tf":0.010638297872340425},"classes/User.html":{"ref":"classes/User.html","tf":0.010638297872340425},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.08823529411764706}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.038834951456310676},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.024271844660194},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.07142857142857142}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.015915119363395226},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.020134228187919462},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.06818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.05305039787798409},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.04609929078014184},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.04609929078014184},"classes/Event.html":{"ref":"classes/Event.html","tf":0.04609929078014184},"classes/Match.html":{"ref":"classes/Match.html","tf":0.04609929078014184},"classes/User.html":{"ref":"classes/User.html","tf":0.04609929078014184},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0660377358490566}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.041666666666666}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010638297872340425},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.010638297872340425},"classes/Event.html":{"ref":"classes/Event.html","tf":0.010638297872340425},"classes/Match.html":{"ref":"classes/Match.html","tf":0.010638297872340425},"classes/User.html":{"ref":"classes/User.html","tf":0.010638297872340425},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.022458628841607566},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.022458628841607566},"classes/Event.html":{"ref":"classes/Event.html","tf":0.022458628841607566},"classes/Match.html":{"ref":"classes/Match.html","tf":0.022458628841607566},"classes/User.html":{"ref":"classes/User.html","tf":0.022458628841607566}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.015060240963855422},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.016597510373443983}},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},":":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"routes.html":{"ref":"routes.html","tf":0.058823529411764705}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.036585365853658534},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.04225352112676056},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":5.0120481927710845},"routes.html":{"ref":"routes.html","tf":0.058823529411764705},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0070921985815602835},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0070921985815602835},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0070921985815602835},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0070921985815602835},"classes/User.html":{"ref":"classes/User.html","tf":0.0070921985815602835}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008274231678486997},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.008274231678486997},"classes/Event.html":{"ref":"classes/Event.html","tf":0.008274231678486997},"classes/Match.html":{"ref":"classes/Match.html","tf":0.008274231678486997},"classes/User.html":{"ref":"classes/User.html","tf":0.008274231678486997},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}},"o":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.013422818791946308},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.013636363636363636},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.015915119363395226},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.012048192771084338},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.016548463356973995},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.016548463356973995},"classes/Event.html":{"ref":"classes/Event.html","tf":0.016548463356973995},"classes/Match.html":{"ref":"classes/Match.html","tf":0.016548463356973995},"classes/User.html":{"ref":"classes/User.html","tf":0.016548463356973995},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.016597510373443983},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.018867924528301886}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}},"e":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.015909090909090907},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.015915119363395226},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169}}}}}},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}},"e":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"t":{"docs":{},"h":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.07042253521126761},"routes.html":{"ref":"routes.html","tf":0.058823529411764705}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"routes.html":{"ref":"routes.html","tf":0.058823529411764705}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}},"g":{"docs":{},"e":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014184397163120567},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.014184397163120567},"classes/Event.html":{"ref":"classes/Event.html","tf":0.014184397163120567},"classes/Match.html":{"ref":"classes/Match.html","tf":0.014184397163120567},"classes/User.html":{"ref":"classes/User.html","tf":0.014184397163120567},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731}}}}}}}}}},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.015915119363395226},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}},"r":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0070921985815602835},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0070921985815602835},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0070921985815602835},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0070921985815602835},"classes/User.html":{"ref":"classes/User.html","tf":0.0070921985815602835}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5.010204081632653}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules.html":{"ref":"modules.html","tf":0.13333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"routes.html":{"ref":"routes.html","tf":0.11764705882352941},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"_":{"docs":{},"/":{"docs":{},"g":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.0436241610738255},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.04090909090909091},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.05305039787798409},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.038834951456310676},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.024096385542168676},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03900709219858156},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.03900709219858156},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.11764705882352941},"classes/Event.html":{"ref":"classes/Event.html","tf":0.03900709219858156},"classes/Match.html":{"ref":"classes/Match.html","tf":0.03900709219858156},"classes/User.html":{"ref":"classes/User.html","tf":0.03900709219858156},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.016597510373443983},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.03773584905660377}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0070921985815602835},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0070921985815602835},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0070921985815602835},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0070921985815602835},"classes/User.html":{"ref":"classes/User.html","tf":0.0070921985815602835}}}}},"i":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1111111111111111}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"routes.html":{"ref":"routes.html","tf":0.058823529411764705}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.07142857142857142},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.04225352112676056},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.02108433734939759},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"routes.html":{"ref":"routes.html","tf":10.058823529411764},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.03691275167785235},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.05339805825242718},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.03313253012048193},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.024896265560165973}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.04090909090909091},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.03134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.03459119496855346}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"u":{"docs":{},"s":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.013002364066193853},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.013002364066193853},"classes/Event.html":{"ref":"classes/Event.html","tf":0.013002364066193853},"classes/Match.html":{"ref":"classes/Match.html","tf":0.013002364066193853},"classes/User.html":{"ref":"classes/User.html","tf":0.013002364066193853}}}},"i":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.00591016548463357},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.00591016548463357},"classes/Event.html":{"ref":"classes/Event.html","tf":0.00591016548463357},"classes/Match.html":{"ref":"classes/Match.html","tf":0.00591016548463357},"classes/User.html":{"ref":"classes/User.html","tf":0.00591016548463357}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}},"e":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}},"t":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.03355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.020454545454545454},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.018072289156626505},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.015366430260047281},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.015366430260047281},"classes/Event.html":{"ref":"classes/Event.html","tf":0.015366430260047281},"classes/Match.html":{"ref":"classes/Match.html","tf":0.015366430260047281},"classes/User.html":{"ref":"classes/User.html","tf":0.015366430260047281},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.02074688796680498},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.025157232704402517}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.013262599469496022},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.13333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.13333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.012195121951219513}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"coverage.html":{"ref":"coverage.html","tf":0.022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"coverage.html":{"ref":"coverage.html","tf":0.05747126436781609}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"i":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.01182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.01182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.01182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.01182033096926714}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05102040816326531}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.046511627906976744},"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}},"x":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.010610079575596816},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.06976744186046512}}}},"m":{"docs":{},"e":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}},"(":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008274231678486997},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.008274231678486997},"classes/Event.html":{"ref":"classes/Event.html","tf":0.008274231678486997},"classes/Match.html":{"ref":"classes/Match.html","tf":0.008274231678486997},"classes/User.html":{"ref":"classes/User.html","tf":0.008274231678486997}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"`":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}}}}}},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.018072289156626505},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.024896265560165973},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.006711409395973154},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.005305039787798408}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.006818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.009404388714733543},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.009433962264150943}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.007957559681697613},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.006024096385542169},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.008298755186721992}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0070921985815602835},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0070921985815602835},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0070921985815602835},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0070921985815602835},"classes/User.html":{"ref":"classes/User.html","tf":0.0070921985815602835}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002364066193853428},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.002364066193853428},"classes/Event.html":{"ref":"classes/Event.html","tf":0.002364066193853428},"classes/Match.html":{"ref":"classes/Match.html","tf":0.002364066193853428},"classes/User.html":{"ref":"classes/User.html","tf":0.002364066193853428}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.013422818791946308},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.012048192771084338},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.016597510373443983}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"'":{"docs":{},")":{"docs":{},"[":{"1":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}}}}}}}}}}}}}}}},"p":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612}}},"x":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.030612244897959183},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004728132387706856},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.004728132387706856},"classes/Event.html":{"ref":"classes/Event.html","tf":0.004728132387706856},"classes/Match.html":{"ref":"classes/Match.html","tf":0.004728132387706856},"classes/User.html":{"ref":"classes/User.html","tf":0.004728132387706856}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.014084507042253521}}}}}},"r":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.03691275167785235},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.045454545454545456},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.0636604774535809},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.06310679611650485},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.030120481927710843},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05200945626477541},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.05200945626477541},"classes/Event.html":{"ref":"classes/Event.html","tf":0.05200945626477541},"classes/Match.html":{"ref":"classes/Match.html","tf":0.05200945626477541},"classes/User.html":{"ref":"classes/User.html","tf":5.053191489361702},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.02074688796680498},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.031446540880503145},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"'":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204}}}}}},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.01818181818181818},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.042440318302387266},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.014563106796116505},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03900709219858156},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.03900709219858156},"classes/Event.html":{"ref":"classes/Event.html","tf":0.03900709219858156},"classes/Match.html":{"ref":"classes/Match.html","tf":0.03900709219858156},"classes/User.html":{"ref":"classes/User.html","tf":0.03900709219858156},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.012578616352201259}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.03355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.02727272727272727},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.026525198938992044},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.04854368932038835},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.030120481927710843},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.004728132387707},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.024896265560165973},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0220125786163522},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.013422818791946308},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009456264775413711},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.009456264775413711},"classes/Event.html":{"ref":"classes/Event.html","tf":0.009456264775413711},"classes/Match.html":{"ref":"classes/Match.html","tf":0.009456264775413711},"classes/User.html":{"ref":"classes/User.html","tf":0.009456264775413711}},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.001182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.001182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.001182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.001182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.004545454545454545},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01182033096926714},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.01182033096926714},"classes/Event.html":{"ref":"classes/Event.html","tf":0.01182033096926714},"classes/Match.html":{"ref":"classes/Match.html","tf":0.01182033096926714},"classes/User.html":{"ref":"classes/User.html","tf":0.01182033096926714},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.006269592476489028},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01020408163265306}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.02040816326530612}}},"e":{"docs":{},"w":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023255813953488372},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"r":{"docs":{"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05555555555555555}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.0436241610738255},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.011363636363636364},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.013262599469496022},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03398058252427184},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.02108433734939759},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009456264775413711},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.009456264775413711},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705},"classes/Event.html":{"ref":"classes/Event.html","tf":0.009456264775413711},"classes/Match.html":{"ref":"classes/Match.html","tf":0.009456264775413711},"classes/User.html":{"ref":"classes/User.html","tf":0.009456264775413711},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.006289308176100629}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024390243902439025},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.028169014084507043}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577},"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/MatchesComponent.html":{"ref":"components/MatchesComponent.html","tf":0.002652519893899204},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.0048543689320388345},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.00909090909090909},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.009404388714733543},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":5.012578616352202},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.003355704697986577}}}},"n":{"docs":{},"k":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}}},"d":{"docs":{},"m":{"docs":{},"_":{"1":{"9":{"4":{"6":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}},"d":{"docs":{"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.0030120481927710845},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.004149377593360996}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035460992907801418},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.0035460992907801418},"classes/Event.html":{"ref":"classes/Event.html","tf":0.0035460992907801418},"classes/Match.html":{"ref":"classes/Match.html","tf":0.0035460992907801418},"classes/User.html":{"ref":"classes/User.html","tf":0.0035460992907801418}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"components/EditComponent.html":{"ref":"components/EditComponent.html","tf":0.010067114093959731},"components/ProfileComponent.html":{"ref":"components/ProfileComponent.html","tf":0.009036144578313253},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.012448132780082987}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EventsComponent.html":{"ref":"components/EventsComponent.html","tf":0.0022727272727272726},"interfaces/IHash.html":{"ref":"interfaces/IHash.html","tf":0.003134796238244514},"interfaces/JHash.html":{"ref":"interfaces/JHash.html","tf":0.0031446540880503146}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009456264775413711},"classes/Activity.html":{"ref":"classes/Activity.html","tf":0.009456264775413711},"classes/Event.html":{"ref":"classes/Event.html","tf":0.009456264775413711},"classes/Match.html":{"ref":"classes/Match.html","tf":0.009456264775413711},"classes/User.html":{"ref":"classes/User.html","tf":0.009456264775413711}}}}}}}},"length":2527},"corpusTokens":["0","0.0.0.0","0/0","0/2","0/3","00","047c","1","15","180","2","3","3/6","3d3a","4","4/10","40","41b3","42","45","48","4853","5","5/11","50","53","6","6/14","7","7.0.3","7/13","814d00b86d2a%7d/uploads/bigstock","81799844_(1).jpg","8896","92f2","accept","accepted,chang","acceptedid","acceptev","acceptevent(eventid","activ","activatedrout","activedrout","activity/:userid","add","addact","allow","angular","angular/common/http","angular/cor","angular/form","angular/platform","angular/rout","api","api/confirmedevents/:userid","api/events/:userid","api/matchedevents/:userid","api/pendingevents/:userid","api/us","apiurl","app","app.compon","app.component.css","app.component.html","appcompon","application/json","appmodul","apppag","appropri","approutingmodul","argument","array","artifact","automat","avail","availability/:userid","back","bactiv","bactiveangular","balls.jpg","bar","base64","base64url","base64url.replac","basketbal","bb6a87601341.jpg","beach","best","bodi","boolean","bootstrap","brows","browser","browser.get","browsermodul","build","calcul","calculater","call","catch.jpg","catcherror","chang","changename(userid","check","cho","class","cli","click","client","climb","code","col","collect","compon","comput","confirm","confirmedev","console.log(confirm","console.log(insert","console.log(match","console.log(pend","console.log(this.user.events[i].rated.length","const","constructor","constructor(priv","constructor(userservic","contain","content","content/uploads/2013/02/adult","content/uploads/2015/10/ultim","content/uploads/2017/07/running.jpg","content/uploads/2018/02/stock","content/uploads/2018/02/tenni","context","convert","correct","correspond","courses1","coverag","creat","cs144","cur.userid","current","databas","date","date(match.unix_time.getsecond","date.now","declar","declineev","declineevent(eventid","default","delet","deleteact","deleteactivity(nam","deleteevent(removeeventid","descript","detail","determin","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","display","dist","document","e1360807803429.jpg","e2","e2e/src/app.po.t","edit","edit.component.css","edit.component.html","edit/edit.compon","editcompon","editcomponent'","element","element(by.css('app","email","end","enddat","endtim","entri","environ","event","event).subscrib","event/:removeeventid","event/:userid","eventid","events.component.css","events.component.html","events/events.compon","eventscompon","eventto","execut","exist","export","express","fals","fetch","fetchconfirmedevents(userid","fetchevents(userid","fetchmatchedevents(userid","fetchmatches(userid","fetchpendingevents(userid","fetchus","file","fill","filltablehead","find","finish","first","flag","follow","for(let","formsmodul","found","frisbe","function","further","g","gener","get","getactivityurl","getactivityurl(nam","getconfirmedev","getev","getmatchedev","getparagraphtext","getpendingev","getuser(userid","getusernam","getusername(userid","given","go","h1')).gettext","half","handl","handlecheckclick","handlecheckclick(row","handleedit","handleev","handlematch","handleprofil","happen","hash","hashmap","hasnotaccept","hasnotaccepted(eventid","header","help","host","hour","http","http://lisabaylis.com/wp/wp","http://localhost:3000/api","http://localhost:3000/match","http://localhost:4200","http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg","http://yourboulder.com/wp","httpclient","httpclientmodul","httpheader","https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg","https://cdn.swimswam.com/wp","https://childlikefaith.com/wp","https://data.englandsquash.com/files?filename=0600776f","https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694","https://tennisracquetcentral.com/wp","https://www.longbeachny.gov/vertical/sites/%7bc3c1054a","id","identifi","if(this.ratedevents.indexof(eventid","ihash","imag","imagemap","implement","import","index","info","initi","initialis","inject","input","insert","insert).pip","insert).subscrib","instead","interest","interfac","invit","invitedid","invitedids[0","invitedids[1","ispastev","ispastevent(endd","jhash","json","json.parse(atob(base64","jwt","karma","ldm_1946.jpg","led","lewi","lift","link","locat","map","match","match.ev","match.loc","match.match_id","match.unix_tim","match/:userid","match_email","match_id","match_nam","matchedev","matches.component.css","matches.component.html","matches/matches.compon","matchescompon","matchescomponent'","matchurl","metadata","method","mike","minut","miscellan","modul","more","name","name/:userid","navbar","navbar.component.css","navbar.component.html","navbar/navbar.compon","navbarcompon","navig","navigateto","new","newact","newnam","ng","ngmodul","ngoninit","none","notrat","notrated(eventid","null","number","numrat","object","observ","onc","oninit","option","otherid","otherparticip","otherparticipant(invitedid","otherwis","out","output","overview","page","param","paramet","paramschang","pars","parsejwt(document.cookie).userid","parsejwt(token","particip","past","path","pathmatch","pend","pendingev","popul","possibleact","post","prior","privat","prod","product","professor","profil","profile.component.css","profile.component.html","profile/:id","profile/profile.compon","profilecompon","profilecomponent.also","project","promis","properti","protractor","provid","providedin","public","publicview","put","rate","ratedev","rateeid","rateus","rateuser(otherid","ratingscal","re","readm","redirectto","reload","remov","removeeventid","replace(/_/g","repres","request","requir","reset","responsetyp","result","return","root","rout","router","routermodul","routermodule.forroot(rout","routing.modul","routing.module.t","run","runguardsandresolv","rxj","rxjs/oper","same","scaffold","score","scoresum","search","see","selector","serv","server","servic","set","show","side","silhouett","skill","soccer","sourc","squash","src/app/app","src/app/app.component.t","src/app/app.module.t","src/app/edit/edit.component.t","src/app/events/events.component.t","src/app/matches/matches.component.t","src/app/navbar/navbar.component.t","src/app/profile/profile.component.t","src/app/user.service.t","starttim","statement","statu","store","string","styleurl","subscribe(confirm","subscribe(confirmedev","subscribe(match","subscribe(pend","subscribe(us","support","svg","swim","tabl","tablehead","tap","tap(r","templateurl","tenni","test","text","that'","thennavig","this.apiurl}/activity/${userid","this.apiurl}/availability/${userid","this.apiurl}/confirmedevents/${userid","this.apiurl}/event/${removeeventid","this.apiurl}/events/${userid","this.apiurl}/matchedevents/${userid","this.apiurl}/name/${userid","this.apiurl}/pendingevents/${userid","this.apiurl}/us","this.confirmedev","this.ev","this.fetchmatches(userid","this.filltablehead","this.http.get(url).pip","this.http.post(`${this.apiurl}/event/${userid","this.http.post(url","this.http.put(url","this.imagemap[\"basketbal","this.imagemap[\"climb","this.imagemap[\"frisbe","this.imagemap[\"lift","this.imagemap[\"run","this.imagemap[\"socc","this.imagemap[\"squash","this.imagemap[\"swim","this.imagemap[\"tenni","this.imagemap[\"volleybal","this.matchedev","this.matchurl}/${userid","this.pendingev","this.publicview","this.ratedevents.push(eventid","this.route.snapshot.parammap.get('id","this.route.snapshot.url.length","this.router.navigate(['/ev","this.router.navigate(['/match","this.router.navigate([`/profile/${this.userid","this.updateprofil","this.us","this.user.act","this.user.avail","this.user.nam","this.userid","this.users.find(cur","this.users.length","this.userservice.changename(this.user.userid","this.userservice.fetchconfirmedevents(this.userid","this.userservice.fetchmatchedevents(this.userid","this.userservice.fetchpendingevents(this.userid","this.userservice.fetchus","this.userservice.getconfirmedev","this.userservice.getmatchedev","this.userservice.getpendingev","this.userservice.getuser(this.userid","this.userservice.getuser(userid","this.userservice.rateuser(this.userid","this.userservice.updateactivities(this.user.userid","this.userservice.updateavailability(this.user.userid","through","time","titl","token","token.split('.')[1","top","true","type","undefin","unit","unix_tim","updat","updateactivities(userid","updateavailability(userid","updateprofil","updateprofileandreturn","url","us","usehash","user","user'","user.nam","user.servic","userid","userservic","valu","var","variabl","version","via","view","void","volleybal","web","whether","whose","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nBactiveAngular\nThis project was generated with Angular CLI version 7.0.3.\nDevelopment server\nRun ng serve --host 0.0.0.0 for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ProfileComponent\n                            \n                            \n                                MatchesComponent\n                            \n                            \n                                EventsComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                EditComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatchesComponent } from './matches/matches.component';\nimport { EventsComponent } from './events/events.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    MatchesComponent,\n    EventsComponent,\n    NavbarComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n  Modules\n  AppRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EventsComponent } from './events/events.component';\nimport { MatchesComponent } from './matches/matches.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  { path: 'events', component: EventsComponent },\n  { path: 'matches', component: MatchesComponent },\n  { path: 'edit', component: EditComponent },\n  //{ path: '', component: ProfileComponent },\n  { path: 'profile/:id', component: ProfileComponent, runGuardsAndResolvers: 'paramsChange' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: bactive-angular\n                            \n                        \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bactive-angular';\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditComponent.html":{"url":"components/EditComponent.html","title":"component - EditComponent","body":"\n                   \n\n\n\n  Components\n  EditComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/edit/edit.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit\n            \n\n            \n                styleUrls\n                edit.component.css\n            \n\n\n\n            \n                templateUrl\n                edit.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService, router: Router)\n                        \n                    \n    \n                    \n                        \n                                Creates an EditComponent.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                            :     UserService\n    \n                                                    \n                                                    \n                                                        The userService.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                            :     Router\n    \n                                                    \n                                                    \n                                                        The router.\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             updateProfile\n                        \n                    \n    \n                    \n                        \n    updateProfile()\n                        \n                    \n    \n                    \n                        \n                                Updates the name, activities, and availabilities.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateProfileAndReturn\n                        \n                    \n    \n                    \n                        \n    updateProfileAndReturn()\n                        \n                    \n    \n                    \n                        \n                                Updates the name, activities, and availabilities, and thennavigates back to the user's profile.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteActivity\n                        \n                    \n    \n                    \n                        \n    deleteActivity(name: string)\n                        \n                    \n    \n                    \n                        \n                                Deletes activity from this user.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        name\n                                                            :     String\n    \n                                                    \n                                                    \n                                                        The name of the activity to be deleted.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addActivity\n                        \n                    \n    \n                    \n                        \n    addActivity()\n                        \n                    \n    \n                    \n                        \n                                Adds a default activity to the user's activities.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fillTableHeadings\n                        \n                    \n    \n                    \n                        \n    fillTableHeadings()\n                        \n                    \n    \n                    \n                        \n                                Populates the availability table with half-hour times.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             calculateRating\n                        \n                    \n    \n                    \n                        \n    calculateRating()\n                        \n                    \n    \n                    \n                        \n                                Calculates the rating of the user.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleCheckClick\n                        \n                    \n    \n                    \n                        \n    handleCheckClick(row: number, col: number)\n                        \n                    \n    \n                    \n                        \n                                Handles checking if a click has happened in the availability table.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             possibleActivities\n                        \n                    \n                    \n                        \n                            possibleActivities:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ratingScale\n                        \n                    \n                    \n                        \n                            ratingScale:     number[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             tableHeadings\n                        \n                    \n                    \n                        \n                            tableHeadings:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     User\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n/**\n    * Parses a JSON Web Token.\n    * Source: CS144 with Professor Cho, Project 4 JWT code\n    * @param {Object} token A JSON Web Token.\n    * @return {String} The parsed JSON Web Token, as a string.\n*/\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n\tselector: 'app-edit',\n\ttemplateUrl: './edit.component.html',\n\tstyleUrls: ['./edit.component.css']\n})\n/**\n    * A class representing the component which allows the user to edit her profile.\n    * @class EditComponent\n*/\nexport class EditComponent implements OnInit {\n\n  \tuser: User;\n\tuserId: number;\n\ttableHeadings: string[] = [];\n\tratingScale: number[] = [1, 2, 3, 4, 5];\n\tpossibleActivities: string[] = [\n\t\t\"Lifting\",\n\t\t\"Running\",\n\t\t\"Swimming\",\n\t\t\"Basketball\",\n\t\t\"Soccer\",\n\t\t\"Tennis\",\n\t\t\"Volleyball\",\n\t\t\"Climbing\",\n\t\t\"Squash\",\n\t\t\"Frisbee\"\n\t];\n\n    /**\n        * Creates an EditComponent.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n    */\n\tconstructor(private userService: UserService, private router: Router) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\t}\n\n    /**\n        * Function which runs at EditComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.fillTableHeadings();\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n        * Updates the name, activities, and availabilities.\n        * @return {Void}\n    */\n\tupdateProfile(): void {\n\t\tthis.userService.changeName(this.user.userId, this.user.name);\n\t\tthis.userService.updateActivities(this.user.userId, this.user.activities);\n\t\tthis.userService.updateAvailability(this.user.userId, this.user.availability);\n\t}\n\n    /**\n        * Updates the name, activities, and availabilities, and then\n        * navigates back to the user's profile.\n        * @return {Void}\n    */\n    updateProfileAndReturn() : void {\n        this.updateProfile();\n        this.router.navigate([`/profile/${this.userId}`]);\n    }\n\n    /**\n        * Deletes activity from this user.\n        * @param {String} name The name of the activity to be deleted.\n        * @return {Void}\n    */\n\tdeleteActivity(name: string) {\n\t\tlet index = -1;\n\t\tlet newActivities = [];\n\t\tfor(let i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n  Components\n  EventsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                events.component.css\n            \n\n\n\n            \n                templateUrl\n                events.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService)\n                        \n                    \n    \n                    \n                        \n                                Creates a UserService.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                            :     UserService\n    \n                                                    \n                                                    \n                                                        The userService.\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             isPastEvent\n                        \n                    \n    \n                    \n                        \n    isPastEvent(endDate: number)\n                        \n                    \n    \n                    \n                        \n                                Determines if a date is in the past.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        endDate\n                                                    \n                                                    \n                                                        The date of the end of the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getActivityUrl\n                        \n                    \n    \n                    \n                        \n    getActivityUrl(name: string)\n                        \n                    \n    \n                    \n                        \n                                Gets the URL for the image of the activity.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        name\n                                                            :     String\n    \n                                                    \n                                                    \n                                                        The name of the activity.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getUserName\n                        \n                    \n    \n                    \n                        \n    getUserName(userId: number)\n                        \n                    \n    \n                    \n                        \n                                Gets the name of the user with id userId.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userId\n                                                    \n                                                    \n                                                        The ID of the user.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     String\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             otherParticipant\n                        \n                    \n    \n                    \n                        \n    otherParticipant(invitedIds: number[])\n                        \n                    \n    \n                    \n                        \n                                Gets the other participant in an event.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userId\n                                                            :     Array\n    \n                                                    \n                                                    \n                                                        The IDs of the users in the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     number\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             notRated\n                        \n                    \n    \n                    \n                        \n    notRated(eventId: number)\n                        \n                    \n    \n                    \n                        \n                                Determines if this event and user have been rated or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        eventId\n                                                    \n                                                    \n                                                        The ID of the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             rateUser\n                        \n                    \n    \n                    \n                        \n    rateUser(otherId: number, eventId: number, rating: number)\n                        \n                    \n    \n                    \n                        \n                                Allows the user to rate the other user for this event.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        otherId\n                                                    \n                                                    \n                                                        The ID of the user to be rated.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        eventId\n                                                    \n                                                    \n                                                        The ID of the event.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        rating\n                                                    \n                                                    \n                                                        The rating, from 1 to 5.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             confirmedEvents\n                        \n                    \n                    \n                        \n                            confirmedEvents:     Event[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             imageMap\n                        \n                    \n                    \n                        \n                            imageMap:     IHash\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ratedEvents\n                        \n                    \n                    \n                        \n                            ratedEvents:     number[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ratings\n                        \n                    \n                    \n                        \n                            ratings:     JHash\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ratingScale\n                        \n                    \n                    \n                        \n                            ratingScale:     number[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     User\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { User, UserService, Event } from '../user.service';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\n/**\n    * A class representing the component which shows a user's events.\n    * @class EventsComponent\n*/\nexport class EventsComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n    confirmedEvents: Event[];\n    imageMap: IHash = {};\n    ratingScale: number[] = [1, 2, 3, 4, 5];\n    ratedEvents: number[] = [];\n    ratings: JHash = {}; // First argument is eventId + \" \" + rateeId. Value stored in that entry is score.\n\n    /**\n        * Creates a UserService.\n        * @param {UserService} userService The userService.\n    */\n\tconstructor(private userService: UserService) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n        this.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n        this.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n        this.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n        this.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n        this.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n        this.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n        this.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n        this.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n        this.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n        this.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at MatchesComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * Do the same for confirmed events.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\n        this.confirmedEvents = this.userService.getConfirmedEvents();\n        if (this.confirmedEvents == null) {\n            this.userService.fetchConfirmedEvents(this.userId)\n                .subscribe(confirmedEvents => {\n                    this.confirmedEvents = this.userService.getConfirmedEvents();\n                });\n        }\n\t}\n\n    /**\n        * Determines if a date is in the past.\n        * @param {number} endDate The date of the end of the event.\n        * @return {boolean} Whether the date is in the past.\n    */\n    isPastEvent(endDate: number) {\n        let current: number = Date.now();\n        return endDate } userId The IDs of the users in the event.\n        * @return {number} The ID of the other participant in an event.\n    */\n    otherParticipant(invitedIds: number[]): number {\n        if (invitedIds[0] == this.userId) {\n            return invitedIds[1];\n        }\n\n        return invitedIds[0];\n    }\n\n    /**\n        * Determines if this event and user have been rated or not.\n        * @param {number} eventId The ID of the event.\n        * @return {Boolean} True if this event has not been rated for this user.\n    */\n    notRated(eventId: number): boolean {\n        if(this.ratedEvents.indexOf(eventId) > -1) return false;\n\n        for(let i = 0; i  0) {\n                    console.log(this.user.events[i].rated.length);\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n        Allows the user to rate the other user for this event.\n        * @param {number} otherId The ID of the user to be rated.\n        * @param {number} eventId The ID of the event.\n        * @param {number} rating The rating, from 1 to 5.\n    */\n    rateUser(otherId: number, eventId: number, rating: number): void {\n\t\tthis.userService.rateUser(this.userId, otherId, eventId, rating);\n        this.ratedEvents.push(eventId);\n\t}\n}\n\n/**\n    A hashmap interface, from strings (activity names) to strings (image URLs).\n    * @interface IHash\n*/\nexport interface IHash {\n    [details: string] : string;\n}\n\n/**\n    A hashmap interface, from strings (eventId + \" \" + userId) to numbers (ratings).\n    * @interface JHash\n*/\nexport interface JHash {\n    [details: string] : number;\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchesComponent.html":{"url":"components/MatchesComponent.html","title":"component - MatchesComponent","body":"\n                   \n\n\n\n  Components\n  MatchesComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/matches/matches.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matches\n            \n\n            \n                styleUrls\n                matches.component.css\n            \n\n\n\n            \n                templateUrl\n                matches.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService)\n                        \n                    \n    \n                    \n                        \n                                Creates a MatchesComponent.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                            :     UserService\n    \n                                                    \n                                                    \n                                                        The userService.\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             hasNotAccepted\n                        \n                    \n    \n                    \n                        \n    hasNotAccepted(eventId: number)\n                        \n                    \n    \n                    \n                        \n                                Given a pending event, return true if user has not accepted\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        eventId\n                                                    \n                                                    \n                                                        The ID of the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getUserName\n                        \n                    \n    \n                    \n                        \n    getUserName(userId: number)\n                        \n                    \n    \n                    \n                        \n                                Gets the name of the user with id userId.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userId\n                                                    \n                                                    \n                                                        The ID of the user.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     String\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             otherParticipant\n                        \n                    \n    \n                    \n                        \n    otherParticipant(invitedIds: number[])\n                        \n                    \n    \n                    \n                        \n                                Gets the other participant in an event.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userId\n                                                            :     Array\n    \n                                                    \n                                                    \n                                                        The IDs of the users in the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     number\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             acceptEvent\n                        \n                    \n    \n                    \n                        \n    acceptEvent(eventId: number, userId: number)\n                        \n                    \n    \n                    \n                        \n                                Adds the userId to the accepted array. If all invited have accepted,changes the status to confirmed. Otherwise, sets the status of the eventto pending or invited.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        eventId\n                                                    \n                                                    \n                                                        The ID of the event.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userId\n                                                    \n                                                    \n                                                        The ID of the user.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             declineEvent\n                        \n                    \n    \n                    \n                        \n    declineEvent(eventId: number)\n                        \n                    \n    \n                    \n                        \n                                Removes the userId from the accepted array. Sets the status of the eventto pending or just matched.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        eventId\n                                                    \n                                                    \n                                                        The ID of the event.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             confirmedEvents\n                        \n                    \n                    \n                        \n                            confirmedEvents:     Event[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             matchedEvents\n                        \n                    \n                    \n                        \n                            matchedEvents:     Event[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             pendingEvents\n                        \n                    \n                    \n                        \n                            pendingEvents:     Event[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     User\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { User, UserService, Event } from '../user.service';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.component.html',\n  styleUrls: ['./matches.component.css']\n})\n/**\n    * A class representing the component which allows the user to see her matches.\n    * @class MatchesComponent\n*/\nexport class MatchesComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n\tmatchedEvents: Event[];\n\tpendingEvents: Event[];\n\tconfirmedEvents: Event[];\n\n    /**\n        * Creates a MatchesComponent.\n        * @param {UserService} userService The userService.\n    */\n\tconstructor(private userService: UserService) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\t}\n\n    /**\n        * Function which runs at MatchesComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * Do the same for matched events, pending events, confirmed events.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.matchedEvents = this.userService.getMatchedEvents();\n\t\tif (this.matchedEvents == null) {\n\t\t\tthis.userService.fetchMatchedEvents(this.userId)\n\t\t\t\t.subscribe(matches => {\n\t\t\t\t\tthis.matchedEvents = this.userService.getMatchedEvents();\n\t\t\t\t\tconsole.log(matches);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.pendingEvents = this.userService.getPendingEvents();\n\t\tif (this.pendingEvents == null) {\n\t\t\tthis.userService.fetchPendingEvents(this.userId)\n\t\t\t\t.subscribe(pending => {\n\t\t\t\t\tthis.pendingEvents = this.userService.getPendingEvents();\n\t\t\t\t\tconsole.log(pending);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.confirmedEvents = this.userService.getConfirmedEvents();\n\t\tif (this.confirmedEvents == null) {\n\t\t\tthis.userService.fetchConfirmedEvents(this.userId)\n\t\t\t\t.subscribe(confirmed => {\n\t\t\t\t\tthis.confirmedEvents = this.userService.getConfirmedEvents();\n\t\t\t\t\tconsole.log(confirmed);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/**\n        * Given a pending event, return true if user has not accepted\n        * @param {number} eventId The ID of the event.\n        * @return {boolean} True if user has not accepted this event.\n    */\n\thasNotAccepted(eventId: number): boolean {\n\t\tfor(let i = 0; i  -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n    /**\n        * Gets the name of the user with id userId.\n        * @param {number} userId The ID of the user.\n        * @return {String} The name of the user.\n    */\n\tgetUserName(userId: number): String {\n        var user: User;\n        user = this.userService.getUser(userId);\n        if (user == null) {\n            return null;\n        }\n\n        return user.name;\n    }\n\n    /**\n        * Gets the other participant in an event.\n        * @param {Array} userId The IDs of the users in the event.\n        * @return {number} The ID of the other participant in an event.\n    */\n    otherParticipant(invitedIds: number[]): number {\n    \tif (invitedIds[0] == this.userId) {\n    \t\treturn invitedIds[1];\n    \t}\n\n    \treturn invitedIds[0];\n    }\n\n    /**\n        * Adds the userId to the accepted array. If all invited have accepted,\n    \t* changes the status to confirmed. Otherwise, sets the status of the event\n    \t* to pending or invited.\n        * @param {number} eventId The ID of the event.\n        * @param {number} userId The ID of the user.\n        * @return {Void}\n    */\n\tacceptEvent(eventId: number, userId: number): void {\n\t\t// search through matched\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                navbar.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService, router: Router)\n                        \n                    \n    \n                    \n                        \n                                Creates a NavbarComponent.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                            :     UserService\n    \n                                                    \n                                                    \n                                                        The userService.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                            :     Router\n    \n                                                    \n                                                    \n                                                        The router.\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             handleEvents\n                        \n                    \n    \n                    \n                        \n    handleEvents()\n                        \n                    \n    \n                    \n                        \n                                Function which routes to events page when user clicks on events in navbar.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleMatches\n                        \n                    \n    \n                    \n                        \n    handleMatches()\n                        \n                    \n    \n                    \n                        \n                                Function which routes to matches page when user clicks on matches in navbar.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleProfile\n                        \n                    \n    \n                    \n                        \n    handleProfile()\n                        \n                    \n    \n                    \n                        \n                                Function which routes to profile page when user clicks on profile in navbar.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Private user\n                        \n                    \n                    \n                        \n                            user:     User\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private userId\n                        \n                    \n                    \n                        \n                            userId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n/**\n    * A class representing the navigation bar at the top.\n    * @class NavbarComponent\n*/\nexport class NavbarComponent implements OnInit {\n    private user: User;\n    private userId: number;\n\n    /**\n        * Creates a NavbarComponent.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n    */\n  constructor(\n      private userService: UserService,\n      private router: Router\n  ) {\n      this.userId = parseJWT(document.cookie).userId;\n  }\n\n  /**\n      * Function which runs at EditComponent's initialisation.\n      * Get the user from the API if it has not been fetched.\n      * @return {Void}\n  */\n  ngOnInit() {\n      this.user = this.userService.getUser(this.userId);\n      if (this.user == null) {\n          this.userService.fetchUser()\n              .subscribe(user => {\n                  this.user = this.userService.getUser(this.userId);\n              });\n      }\n  }\n\n  /**\n    * Function which routes to events page when user clicks on events in navbar.\n    * @return {Void}\n  */\n  handleEvents() {\n      this.router.navigate(['/events']);\n  }\n\n  /**\n    * Function which routes to matches page when user clicks on matches in navbar.\n    * @return {Void}\n  */\n  handleMatches () {\n      this.router.navigate(['/matches']);\n  }\n\n  /**\n    * Function which routes to profile page when user clicks on profile in navbar.\n    * @return {Void}\n  */\n  handleProfile () {\n      this.router.navigate([`/profile/${this.userId}`]);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n  Components\n  ProfileComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                profile.component.css\n            \n\n\n\n            \n                templateUrl\n                profile.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService, router: Router, route: ActivatedRoute)\n                        \n                    \n    \n                    \n                        \n                                Creates a ProfileComponent.Also fills the imageMap hash-map.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                            :     UserService\n    \n                                                    \n                                                    \n                                                        The userService.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                            :     Router\n    \n                                                    \n                                                    \n                                                        The router.\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                            :     ActivedRoute\n    \n                                                    \n                                                    \n                                                        The activated route.\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             fillTableHeadings\n                        \n                    \n    \n                    \n                        \n    fillTableHeadings()\n                        \n                    \n    \n                    \n                        \n                                Populates the availability table with half-hour times.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             calculateRating\n                        \n                    \n    \n                    \n                        \n    calculateRating()\n                        \n                    \n    \n                    \n                        \n                                Calculates the rating of the user.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getActivityUrl\n                        \n                    \n    \n                    \n                        \n    getActivityUrl(name: string)\n                        \n                    \n    \n                    \n                        \n                                Gets the URL for the image of the activity.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        name\n                                                            :     String\n    \n                                                    \n                                                    \n                                                        The name of the activity.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleEdit\n                        \n                    \n    \n                    \n                        \n    handleEdit()\n                        \n                    \n    \n                    \n                        \n                                Function which routes to edit page when user clicks on edit in navbar.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             imageMap\n                        \n                    \n                    \n                        \n                            imageMap:     IHash\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             publicView\n                        \n                    \n                    \n                        \n                            publicView:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             tableHeadings\n                        \n                    \n                    \n                        \n                            tableHeadings:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     User\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n    * Parses a JSON Web Token.\n    * Source: CS144 with Professor Cho, Project 4 JWT code\n    * @param {Object} token A JSON Web Token.\n    * @return {String} The parsed JSON Web Token, as a string.\n*/\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.css']\n})\n/**\n    * A class representing the component which allows the user to edit her profile.\n    * @class ProfileComponent\n*/\nexport class ProfileComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n\ttableHeadings: string[] = [];\n\timageMap: IHash = {};\n\tpublicView: boolean = false;\n\n    /**\n        * Creates a ProfileComponent.\n        * Also fills the imageMap hash-map.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n        * @param {ActivedRoute} route The activated route.\n    */\n\tconstructor(private userService: UserService,\n\t\tprivate router: Router,\n\t\tprivate route : ActivatedRoute) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// If the link that led to the profile page is from /profile, display the public view\n\t\tif ( this.route.snapshot.url.length > 0) {\n\t\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\t\tif (id != null && id != this.userId) {\n\t\t\t\tthis.userId = id;\n\t\t\t\tthis.publicView = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n\t\tthis.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n\t\tthis.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n\t\tthis.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n\t\tthis.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n\t\tthis.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n\t\tthis.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n\t\tthis.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n\t\tthis.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n\t\tthis.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at EditComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// + converts to a number\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tif (id != null && id != this.userId) {\n\t\t\tthis.userId = id;\n\t\t\tthis.publicView = true;\n\t\t}\n\t\tthis.fillTableHeadings();\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n        * Populates the availability table with half-hour times.\n        * @return {Void}\n    */\n\tfillTableHeadings(): void {\n\t\tlet hour = 0;\n\t\tlet minutes = \"00\";\n\n\t\tfor (let i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                A class representing an activity.\n\n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     interest\n                                \n                            \n                            \n                                \n                                    interest:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skill\n                                \n                            \n                            \n                                \n                                    skill:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    events\n            \n            \n            EventsComponent\n            \n        \n        \n            \n                    matches\n            \n            \n            MatchesComponent\n            \n        \n        \n            \n                    edit\n            \n            \n            EditComponent\n            \n        \n        \n            \n                    profile/:id\n            \n            \n            ProfileComponent\n            \n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Activity.html":{"url":"classes/Activity.html","title":"class - Activity","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                A class representing an activity.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     interest\n                                \n                            \n                            \n                                \n                                    interest:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skill\n                                \n                            \n                            \n                                \n                                    skill:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     navigateTo\n                                \n                            \n            \n                            \n                                \n            navigateTo()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getParagraphText\n                                \n                            \n            \n                            \n                                \n            getParagraphText()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                A class representing an activity.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     interest\n                                \n                            \n                            \n                                \n                                    interest:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skill\n                                \n                            \n                            \n                                \n                                    skill:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Match.html":{"url":"classes/Match.html","title":"class - Match","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Match\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                A class representing an activity.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     interest\n                                \n                            \n                            \n                                \n                                    interest:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skill\n                                \n                            \n                            \n                                \n                                    skill:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                A class representing an activity.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     interest\n                                \n                            \n                            \n                                \n                                    interest:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skill\n                                \n                            \n                            \n                                \n                                    skill:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHash.html":{"url":"interfaces/IHash.html","title":"interface - IHash","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IHash\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [details: string]:    string\n            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n    * Parses a JSON Web Token.\n    * Source: CS144 with Professor Cho, Project 4 JWT code\n    * @param {Object} token A JSON Web Token.\n    * @return {String} The parsed JSON Web Token, as a string.\n*/\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.css']\n})\n/**\n    * A class representing the component which allows the user to edit her profile.\n    * @class ProfileComponent\n*/\nexport class ProfileComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n\ttableHeadings: string[] = [];\n\timageMap: IHash = {};\n\tpublicView: boolean = false;\n\n    /**\n        * Creates a ProfileComponent.\n        * Also fills the imageMap hash-map.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n        * @param {ActivedRoute} route The activated route.\n    */\n\tconstructor(private userService: UserService,\n\t\tprivate router: Router,\n\t\tprivate route : ActivatedRoute) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// If the link that led to the profile page is from /profile, display the public view\n\t\tif ( this.route.snapshot.url.length > 0) {\n\t\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\t\tif (id != null && id != this.userId) {\n\t\t\t\tthis.userId = id;\n\t\t\t\tthis.publicView = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n\t\tthis.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n\t\tthis.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n\t\tthis.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n\t\tthis.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n\t\tthis.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n\t\tthis.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n\t\tthis.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n\t\tthis.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n\t\tthis.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at EditComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// + converts to a number\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tif (id != null && id != this.userId) {\n\t\t\tthis.userId = id;\n\t\t\tthis.publicView = true;\n\t\t}\n\t\tthis.fillTableHeadings();\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n        * Populates the availability table with half-hour times.\n        * @return {Void}\n    */\n\tfillTableHeadings(): void {\n\t\tlet hour = 0;\n\t\tlet minutes = \"00\";\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JHash.html":{"url":"interfaces/JHash.html","title":"interface - JHash","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  JHash\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/events/events.component.ts\n        \n\n            \n                Description\n            \n            \n                A hashmap interface, from strings (eventId + \" \" + userId) to numbers (ratings).\n\n            \n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [details: string]:    number\n            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Component, OnInit } from '@angular/core';\nimport { User, UserService, Event } from '../user.service';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\n/**\n    * A class representing the component which shows a user's events.\n    * @class EventsComponent\n*/\nexport class EventsComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n    confirmedEvents: Event[];\n    imageMap: IHash = {};\n    ratingScale: number[] = [1, 2, 3, 4, 5];\n    ratedEvents: number[] = [];\n    ratings: JHash = {}; // First argument is eventId + \" \" + rateeId. Value stored in that entry is score.\n\n    /**\n        * Creates a UserService.\n        * @param {UserService} userService The userService.\n    */\n\tconstructor(private userService: UserService) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n        this.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n        this.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n        this.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n        this.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n        this.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n        this.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n        this.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n        this.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n        this.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n        this.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at MatchesComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * Do the same for confirmed events.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\n        this.confirmedEvents = this.userService.getConfirmedEvents();\n        if (this.confirmedEvents == null) {\n            this.userService.fetchConfirmedEvents(this.userId)\n                .subscribe(confirmedEvents => {\n                    this.confirmedEvents = this.userService.getConfirmedEvents();\n                });\n        }\n\t}\n\n    /**\n        * Determines if a date is in the past.\n        * @param {number} endDate The date of the end of the event.\n        * @return {boolean} Whether the date is in the past.\n    */\n    isPastEvent(endDate: number) {\n        let current: number = Date.now();\n        return endDate } userId The IDs of the users in the event.\n        * @return {number} The ID of the other participant in an event.\n    */\n    otherParticipant(invitedIds: number[]): number {\n        if (invitedIds[0] == this.userId) {\n            return invitedIds[1];\n        }\n\n        return invitedIds[0];\n    }\n\n    /**\n        * Determines if this event and user have been rated or not.\n        * @param {number} eventId The ID of the event.\n        * @return {Boolean} True if this event has not been rated for this user.\n    */\n    notRated(eventId: number): boolean {\n        if(this.ratedEvents.indexOf(eventId) > -1) return false;\n\n        for(let i = 0; i  0) {\n                    console.log(this.user.events[i].rated.length);\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n        Allows the user to rate the other user for this event.\n        * @param {number} otherId The ID of the user to be rated.\n        * @param {number} eventId The ID of the event.\n        * @param {number} rating The rating, from 1 to 5.\n    */\n    rateUser(otherId: number, eventId: number, rating: number): void {\n\t\tthis.userService.rateUser(this.userId, otherId, eventId, rating);\n        this.ratedEvents.push(eventId);\n\t}\n}\n\n/**\n    A hashmap interface, from strings (activity names) to strings (image URLs).\n    * @interface IHash\n*/\nexport interface IHash {\n    [details: string] : string;\n}\n\n/**\n    A hashmap interface, from strings (eventId + \" \" + userId) to numbers (ratings).\n    * @interface JHash\n*/\nexport interface JHash {\n    [details: string] : number;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             headers\n                        \n                    \n                    \n                        \n                            headers:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             options\n                        \n                    \n                    \n                        \n                            options:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             require\n                        \n                    \n                    \n                        \n                            require:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             context\n                        \n                    \n                    \n                        \n                            context:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    15%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                e2e/src/app.po.ts\n            \n            \n                classe\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/edit/edit.component.ts\n            \n            \n                component\n            \n            \n                EditComponent\n            \n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                src/app/events/events.component.ts\n            \n            \n                component\n            \n            \n                EventsComponent\n            \n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                src/app/events/events.component.ts\n            \n            \n                interface\n            \n            \n                IHash\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/app/events/events.component.ts\n            \n            \n                interface\n            \n            \n                JHash\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/app/matches/matches.component.ts\n            \n            \n                component\n            \n            \n                MatchesComponent\n            \n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                src/app/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                src/app/profile/profile.component.ts\n            \n            \n                component\n            \n            \n                ProfileComponent\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                src/app/profile/profile.component.ts\n            \n            \n                interface\n            \n            \n                IHash\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                classe\n            \n            \n                Activity\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                classe\n            \n            \n                Event\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                classe\n            \n            \n                Match\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                classe\n            \n            \n                User\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
