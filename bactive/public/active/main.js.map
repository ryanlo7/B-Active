{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/events/events.component.css","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/matches/matches.component.css","webpack:///./src/app/matches/matches.component.html","webpack:///./src/app/matches/matches.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EventsComponent } from './events/events.component';\nimport { MatchesComponent } from './matches/matches.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  { path: 'events', component: EventsComponent },\n  { path: 'matches', component: MatchesComponent },\n  { path: 'edit', component: EditComponent },\n  //{ path: '', component: ProfileComponent },\n  { path: 'profile/:id', component: ProfileComponent, runGuardsAndResolvers: 'paramsChange' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }","module.exports = \"body {\\n    background: rgba(195, 231, 245);\\n}\\n\\n.well {\\n    background: rgba(225, 243, 250);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQ0FBZ0M7Q0FDbkM7O0FBRUQ7SUFDSSxnQ0FBZ0M7Q0FDbkMiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMTk1LCAyMzEsIDI0NSk7XG59XG5cbi53ZWxsIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDIyNSwgMjQzLCAyNTApO1xufVxuIl19 */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bactive-angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatchesComponent } from './matches/matches.component';\nimport { EventsComponent } from './events/events.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    MatchesComponent,\n    EventsComponent,\n    NavbarComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"h1, h2 {\\r\\n    font-family: \\\"Special Elite\\\";\\r\\n}\\r\\n\\r\\nbutton {\\r\\n\\tfont-family: \\\"Special Elite\\\";\\r\\n\\tmargin: 5px;\\r\\n}\\r\\n\\r\\n.well {\\r\\n    background: rgba(225, 243, 250);\\r\\n}\\r\\n\\r\\n.activityLevel {\\r\\n\\tpadding-right: 10px;\\r\\n}\\r\\n\\r\\n.availability-th {\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 1px;\\r\\n\\tborder-color: #777a7f;\\r\\n\\t/*width: 70px;*/\\r\\n\\tpadding: 25px;\\r\\n}\\r\\n\\r\\n.availability-time-th {\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 1px;\\r\\n\\tborder-color: #777a7f;\\r\\n\\tpadding: 5px;\\r\\n\\twidth: 12%;\\r\\n}\\r\\n\\r\\n#notFree {\\r\\n\\tbackground-color: #ffffff;\\r\\n}\\r\\n\\r\\n.schedule {\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 0px;\\r\\n\\tborder-color: black;\\r\\n\\theight: 500px;\\r\\n\\twidth: 100%;\\r\\n\\toverflow-y: auto;\\r\\n}\\r\\n\\r\\n.star-rating {\\r\\n\\tdisplay: inline;\\r\\n}\\r\\n\\r\\nh4, h6 {\\r\\n\\tdisplay: inline;\\r\\n}\\r\\n\\r\\n.availabilityCell {\\r\\n\\tpadding:0px;\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 1px;\\r\\n\\tborder-color: #777a7f;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n\\tdisplay: block;\\r\\n\\theight: 100%;\\r\\n\\tborder-width: 0px;\\r\\n\\tborder-style: solid;\\r\\n\\tborder-color: black;\\r\\n\\tmargin: auto;\\r\\n}\\r\\n\\r\\nlabel:hover {\\r\\n\\tbackground-color: gray;\\r\\n}\\r\\n\\r\\ninput[type=\\\"checkbox\\\"] {\\r\\n\\topacity: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBNkI7Q0FDaEM7O0FBRUQ7Q0FDQyw2QkFBNkI7Q0FDN0IsWUFBWTtDQUNaOztBQUVEO0lBQ0ksZ0NBQWdDO0NBQ25DOztBQUVEO0NBQ0Msb0JBQW9CO0NBQ3BCOztBQUVEO0NBQ0Msb0JBQW9CO0NBQ3BCLGtCQUFrQjtDQUNsQixzQkFBc0I7Q0FDdEIsZ0JBQWdCO0NBQ2hCLGNBQWM7Q0FDZDs7QUFFRDtDQUNDLG9CQUFvQjtDQUNwQixrQkFBa0I7Q0FDbEIsc0JBQXNCO0NBQ3RCLGFBQWE7Q0FDYixXQUFXO0NBQ1g7O0FBRUQ7Q0FDQywwQkFBMEI7Q0FDMUI7O0FBRUQ7Q0FDQyxvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixjQUFjO0NBQ2QsWUFBWTtDQUNaLGlCQUFpQjtDQUNqQjs7QUFFRDtDQUNDLGdCQUFnQjtDQUNoQjs7QUFDRDtDQUNDLGdCQUFnQjtDQUNoQjs7QUFFRDtDQUNDLFlBQVk7Q0FDWixvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLHNCQUFzQjtDQUN0Qjs7QUFFRDtDQUNDLGVBQWU7Q0FDZixhQUFhO0NBQ2Isa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixvQkFBb0I7Q0FDcEIsYUFBYTtDQUNiOztBQUVEO0NBQ0MsdUJBQXVCO0NBQ3ZCOztBQUVEO0NBQ0MsV0FBVztDQUNYIiwiZmlsZSI6InNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSwgaDIge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiU3BlY2lhbCBFbGl0ZVwiO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG5cdGZvbnQtZmFtaWx5OiBcIlNwZWNpYWwgRWxpdGVcIjtcclxuXHRtYXJnaW46IDVweDtcclxufVxyXG5cclxuLndlbGwge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyMjUsIDI0MywgMjUwKTtcclxufVxyXG5cclxuLmFjdGl2aXR5TGV2ZWwge1xyXG5cdHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5hdmFpbGFiaWxpdHktdGgge1xyXG5cdGJvcmRlci1zdHlsZTogc29saWQ7XHJcblx0Ym9yZGVyLXdpZHRoOiAxcHg7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzc3YTdmO1xyXG5cdC8qd2lkdGg6IDcwcHg7Ki9cclxuXHRwYWRkaW5nOiAyNXB4O1xyXG59XHJcblxyXG4uYXZhaWxhYmlsaXR5LXRpbWUtdGgge1xyXG5cdGJvcmRlci1zdHlsZTogc29saWQ7XHJcblx0Ym9yZGVyLXdpZHRoOiAxcHg7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzc3YTdmO1xyXG5cdHBhZGRpbmc6IDVweDtcclxuXHR3aWR0aDogMTIlO1xyXG59XHJcblxyXG4jbm90RnJlZSB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuLnNjaGVkdWxlIHtcclxuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG5cdGJvcmRlci13aWR0aDogMHB4O1xyXG5cdGJvcmRlci1jb2xvcjogYmxhY2s7XHJcblx0aGVpZ2h0OiA1MDBweDtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4uc3Rhci1yYXRpbmcge1xyXG5cdGRpc3BsYXk6IGlubGluZTtcclxufVxyXG5oNCwgaDYge1xyXG5cdGRpc3BsYXk6IGlubGluZTtcclxufVxyXG5cclxuLmF2YWlsYWJpbGl0eUNlbGwge1xyXG5cdHBhZGRpbmc6MHB4O1xyXG5cdGJvcmRlci1zdHlsZTogc29saWQ7XHJcblx0Ym9yZGVyLXdpZHRoOiAxcHg7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzc3YTdmO1xyXG59XHJcblxyXG5sYWJlbCB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdGJvcmRlci13aWR0aDogMHB4O1xyXG5cdGJvcmRlci1zdHlsZTogc29saWQ7XHJcblx0Ym9yZGVyLWNvbG9yOiBibGFjaztcclxuXHRtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbmxhYmVsOmhvdmVyIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xyXG5cdG9wYWNpdHk6IDE7XHJcbn1cclxuIl19 */\"","module.exports = \"<head>\\n    <title>B-Active - Edit Profile</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n</head>\\n\\n<div class=\\\"container-fluid well\\\">\\n\\n<div *ngIf=\\\"user\\\">\\n    <h1>Edit Profile</h1>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"updateProfile()\\\"> Save </button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"updateProfileAndReturn()\\\"> Return to Profile </button>\\n</div>\\n\\n<div *ngIf=\\\"user\\\">\\n<h3>Name:\\n    <span>\\n        <input type=\\\"text\\\" class=\\\"form-control nameBox\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\">\\n    </span>\\n</h3>\\n<h3>Email: {{ user.email }} </h3>\\n</div>\\n\\n<div class=\\\"user-rating\\\" *ngIf=\\\"user\\\">\\n    <h4>Rating: </h4>\\n    <div class=\\\"star-rating\\\" *ngFor=\\\"let rating of calculateRating()\\\">\\n        <span class=\\\"fa fa-star\\\"></span>\\n    </div>\\n    <h6> ({{user.rating.numRatings}})</h6>\\n</div>\\n\\n</div>\\n<div class=\\\"container-fluid well\\\">\\n\\n<h2>Activities</h2>\\n<div *ngIf=\\\"user\\\">\\n    <table>\\n        <thead>\\n            <tr>\\n                <th class=\\\"activityLevel\\\">Activity</th>\\n                <th class=\\\"activityLevel\\\">Skill Level</th>\\n                <th class=\\\"activityLevel\\\">Interest Level</th>\\n            </tr>\\n        </thead>\\n            <tr *ngFor=\\\"let activity of user.activities; let i = index\\\">\\n                <td class=\\\"activityLevel\\\"><select [(ngModel)]=\\\"user.activities[i].name\\\">\\n                \\t<option *ngFor=\\\"let x1 of possibleActivities\\\" [selected]=\\\"user.activities[i].name == x1\\\">\\n                \\t{{x1}}</option>\\n                </select></td>\\n                <td class=\\\"activityLevel\\\"><select [(ngModel)]=\\\"activity.skill\\\">\\n                \\t<option *ngFor=\\\"let x of ratingScale\\\" [selected]=\\\"activity.skill == x\\\">\\n                \\t{{x}}</option>\\n                </select></td>\\n                <td class=\\\"activityLevel\\\"><select [(ngModel)]=\\\"activity.interest\\\">\\n                \\t<option *ngFor=\\\"let x of ratingScale\\\" [selected]=\\\"activity.interest == x\\\">\\n                \\t{{x}}</option>\\n                </select></td>\\n                <td class=\\\"activityLevel\\\"><button class=\\\"btn btn-default\\\" (click)=\\\"deleteActivity(activity.name)\\\"> Delete </button></td>\\n            </tr>\\n    </table>\\n\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"addActivity()\\\"> Add Activity </button>\\n</div>\\n\\n</div>\\n<div class=\\\"container-fluid well\\\">\\n\\n<h2>Availability</h2>\\n<div class=\\\"schedule\\\" *ngIf=\\\"user\\\">\\n    <table style=\\\"border: 1px solid #777a7f; border-spacing: 0px; width:100%;\\\" cellspacing=\\\"0\\\" >\\n        <thead>\\n            <tr bgcolor=\\\"#5e99d1\\\">\\n                <th class=\\\"availability-th\\\"></th>\\n                <th class=\\\"availability-th\\\">Monday</th>\\n                <th class=\\\"availability-th\\\">Tuesday</th>\\n                <th class=\\\"availability-th\\\">Wednesday</th>\\n                <th class=\\\"availability-th\\\">Thursday</th>\\n                <th class=\\\"availability-th\\\">Friday</th>\\n                <th class=\\\"availability-th\\\">Saturday</th>\\n                <th class=\\\"availability-th\\\">Sunday</th>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let time of user.availability[0]; let i = index;\\\">\\n            <th class=\\\"availability-time-th\\\" bgcolor=\\\"#5e99d1\\\">\\n                {{ this.tableHeadings[i] }}\\n            </th>\\n            <ng-container *ngFor=\\\"let day of user.availability; let j = index;\\\">\\n                <td class=\\\"availabilityCell\\\">\\n                    <div *ngIf=\\\"user.availability[j][i]\\\">\\n                        <label><input type=\\\"checkbox\\\" checked (click)=\\\"handleCheckClick(j, i)\\\"></label>\\n                    </div>\\n                    <div *ngIf=\\\"!user.availability[j][i]\\\">\\n                        <label><input type=\\\"checkbox\\\" (click)=\\\"handleCheckClick(j, i)\\\" ></label>\\n                    </div>\\n                </td>\\n            </ng-container>\\n        </tr>\\n    </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n/**\n    * Parses a JSON Web Token.\n    * Source: CS144 with Professor Cho, Project 4 JWT code\n    * @param {Object} token A JSON Web Token.\n    * @return {String} The parsed JSON Web Token, as a string.\n*/\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n\tselector: 'app-edit',\n\ttemplateUrl: './edit.component.html',\n\tstyleUrls: ['./edit.component.css']\n})\n/**\n    * A class representing the component which allows the user to edit her profile.\n    * @class EditComponent\n*/\nexport class EditComponent implements OnInit {\n\n  \tuser: User;\n\tuserId: number;\n\ttableHeadings: string[] = [];\n\tratingScale: number[] = [1, 2, 3, 4, 5];\n\tpossibleActivities: string[] = [\n\t\t\"Lifting\",\n\t\t\"Running\",\n\t\t\"Swimming\",\n\t\t\"Basketball\",\n\t\t\"Soccer\",\n\t\t\"Tennis\",\n\t\t\"Volleyball\",\n\t\t\"Climbing\",\n\t\t\"Squash\",\n\t\t\"Frisbee\"\n\t];\n\n    /**\n        * Creates an EditComponent.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n    */\n\tconstructor(private userService: UserService, private router: Router) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\t}\n\n    /**\n        * Function which runs at EditComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.fillTableHeadings();\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n        * Updates the name, activities, and availabilities.\n        * @return {Void}\n    */\n\tupdateProfile(): void {\n\t\tthis.userService.changeName(this.user.userId, this.user.name);\n\t\tthis.userService.updateActivities(this.user.userId, this.user.activities);\n\t\tthis.userService.updateAvailability(this.user.userId, this.user.availability);\n\t}\n\n    /**\n        * Updates the name, activities, and availabilities, and then\n        * navigates back to the user's profile.\n        * @return {Void}\n    */\n    updateProfileAndReturn() : void {\n        this.updateProfile();\n        this.router.navigate([`/profile/${this.userId}`]);\n    }\n\n    /**\n        * Deletes activity from this user.\n        * @param {String} name The name of the activity to be deleted.\n        * @return {Void}\n    */\n\tdeleteActivity(name: string) {\n\t\tlet index = -1;\n\t\tlet newActivities = [];\n\t\tfor(let i = 0; i < this.user.activities.length; i++) {\n\t\t\tif (this.user.activities[i].name != name) {\n\t\t\t\tnewActivities.push(this.user.activities[i])\n\t\t\t}\n\t\t}\n\t\tthis.user.activities = newActivities;\n\t\tconsole.log('deleting: ' + name);\n\t\tconsole.log(this.user.activities);\n\t}\n\n    /**\n        * Adds a default activity to the user's activities.\n        * @return {Void}\n    */\n\taddActivity() {\n\t\t// push default settings\n\t\tthis.user.activities.push({\"name\": \"Lifting\", \"skill\": 1, \"interest\": 1});\n\t}\n\n    /**\n        * Populates the availability table with half-hour times.\n        * @return {Void}\n    */\n\tfillTableHeadings(): void {\n\t\tlet hour = 0;\n\t\tlet minutes = \"00\";\n\n\t\tfor (let i = 0; i < 48; i ++) {\n\t\t\tthis.tableHeadings.push(`${hour}:${minutes}`);\n\t\t\thour = (i % 2 == 1) ? hour + 1 : hour;\n\t\t\tminutes = (minutes == \"00\") ? \"30\" : \"00\";\n\t\t}\n\t}\n\n    /**\n        * Calculates the rating of the user.\n        * @return {Array} An array of numbers, of length 5, for which the appropriate number of entries are full.\n    */\n\tcalculateRating() {\n\t\tlet ratings = this.user.rating;\n\t\tif (ratings.numRatings === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet avg = Math.ceil(ratings.scoreSum / ratings.numRatings);\n\t\treturn Array(avg).fill(5);\n\t}\n\n    /**\n        * Handles checking if a click has happened in the availability table.\n        * @return {Void}\n    */\n\thandleCheckClick(row: number, col: number) {\n\t\tthis.user.availability[row][col] = !this.user.availability[row][col];\n\t}\n}\n","module.exports = \"h1, h2 {\\n    font-family: 'Special Elite';\\n}\\n\\n.col-sm-6 {\\n    text-align: center;\\n}\\n\\n.col-sm-12 {\\n    text-align: center;\\n}\\n\\ntable.center {\\n  margin-left:auto;\\n  margin-right:auto;\\n}\\n\\n.well {\\n    background: rgba(225, 243, 250);\\n}\\n\\n.table {\\n    background: white;\\n    border-width: 2px;\\n    border-radius: 5px;\\n    border-color: rgba(195, 230, 243);\\n    font-family: 'Special Elite';\\n}\\n\\ntd {\\n    height: 50px;\\n    text-align: center;\\n    vertical-align: middle;\\n    border-width: 0px;\\n}\\n\\n.darkBox {\\n\\tbackground-color: #000000;\\n\\topacity: 0.3;\\n\\twidth:300px;\\n\\theight: 200px;\\n\\tposition: absolute;\\n}\\n\\n.eventInfo {\\n\\tcolor: white;\\n\\tposition: absolute;\\n\\tpadding-top: 100px;\\n\\tpadding-left: 10px;\\n}\\n\\n.eventBox {\\n\\tpadding: 10px;\\n\\tdisplay: inline-block;\\n    font-family: 'Special Elite';\\n}\\n\\n.eventBoxes {\\n\\tborder-style: solid;\\n\\tborder-width: 0px;\\n\\tborder-color: black;\\n\\twidth: 100%;\\n\\theight: 220px;\\n\\toverflow: auto;\\n\\tpadding: ;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzL2V2ZW50cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksNkJBQTZCO0NBQ2hDOztBQUVEO0lBQ0ksbUJBQW1CO0NBQ3RCOztBQUVEO0lBQ0ksbUJBQW1CO0NBQ3RCOztBQUVEO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtDQUNuQjs7QUFFRDtJQUNJLGdDQUFnQztDQUNuQzs7QUFFRDtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGtDQUFrQztJQUNsQyw2QkFBNkI7Q0FDaEM7O0FBRUQ7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixrQkFBa0I7Q0FDckI7O0FBRUQ7Q0FDQywwQkFBMEI7Q0FDMUIsYUFBYTtDQUNiLFlBQVk7Q0FDWixjQUFjO0NBQ2QsbUJBQW1CO0NBQ25COztBQUNEO0NBQ0MsYUFBYTtDQUNiLG1CQUFtQjtDQUNuQixtQkFBbUI7Q0FDbkIsbUJBQW1CO0NBQ25COztBQUVEO0NBQ0MsY0FBYztDQUNkLHNCQUFzQjtJQUNuQiw2QkFBNkI7Q0FDaEM7O0FBRUQ7Q0FDQyxvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixZQUFZO0NBQ1osY0FBYztDQUNkLGVBQWU7Q0FDZixVQUFVO0NBQ1YiLCJmaWxlIjoic3JjL2FwcC9ldmVudHMvZXZlbnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSwgaDIge1xuICAgIGZvbnQtZmFtaWx5OiAnU3BlY2lhbCBFbGl0ZSc7XG59XG5cbi5jb2wtc20tNiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY29sLXNtLTEyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnRhYmxlLmNlbnRlciB7XG4gIG1hcmdpbi1sZWZ0OmF1dG87XG4gIG1hcmdpbi1yaWdodDphdXRvO1xufVxuXG4ud2VsbCB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyMjUsIDI0MywgMjUwKTtcbn1cblxuLnRhYmxlIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItd2lkdGg6IDJweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE5NSwgMjMwLCAyNDMpO1xuICAgIGZvbnQtZmFtaWx5OiAnU3BlY2lhbCBFbGl0ZSc7XG59XG5cbnRkIHtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYm9yZGVyLXdpZHRoOiAwcHg7XG59XG5cbi5kYXJrQm94IHtcblx0YmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcblx0b3BhY2l0eTogMC4zO1xuXHR3aWR0aDozMDBweDtcblx0aGVpZ2h0OiAyMDBweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xufVxuLmV2ZW50SW5mbyB7XG5cdGNvbG9yOiB3aGl0ZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRwYWRkaW5nLXRvcDogMTAwcHg7XG5cdHBhZGRpbmctbGVmdDogMTBweDtcbn1cblxuLmV2ZW50Qm94IHtcblx0cGFkZGluZzogMTBweDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiAnU3BlY2lhbCBFbGl0ZSc7XG59XG5cbi5ldmVudEJveGVzIHtcblx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcblx0Ym9yZGVyLXdpZHRoOiAwcHg7XG5cdGJvcmRlci1jb2xvcjogYmxhY2s7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDIyMHB4O1xuXHRvdmVyZmxvdzogYXV0bztcblx0cGFkZGluZzogO1xufVxuIl19 */\"","module.exports = \"<head>\\n    <title>B-Active - Events</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" integrity=\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\" crossorigin=\\\"anonymous\\\">\\n</head>\\n\\n<div class=\\\"container-fluid well\\\">\\n    <h1>Confirmed Events</h1>\\n    <div *ngIf=\\\"confirmedEvents\\\">\\n        <div *ngFor=\\\"let event of confirmedEvents\\\">\\n            <div *ngIf=\\\"!isPastEvent(event.endTime)\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"eventBox\\\">\\n                        <div class=\\\"darkBox\\\" width=\\\"300\\\" height=\\\"200\\\"></div>\\n                        <div class=\\\"eventInfo\\\">\\n                            <div style=\\\"font-size: 18pt;\\\">{{ event.activity }}</div>\\n                        </div>\\n                        <img src={{getActivityUrl(event.activity)}} width=\\\"300\\\" height=\\\"200\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                            <tr>\\n                                <td>Participants</td>\\n                                <td><span *ngFor=\\\"let id of event.invitedIds\\\">{{ getUserName(id) }}<br /></span></td>\\n                            </tr>\\n                            <tr>\\n                                <td>Start Time</td>\\n                                <td>{{ event.startTime | date: 'd MMM yyyy' }}, {{ event.startTime | date: 'hh:mm a' }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>End Time</td>\\n                                <td>{{ event.endTime | date: 'd MMM yyyy' }}, {{ event.endTime | date: 'hh:mm a' }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Location</td>\\n                                <td>{{ event.location }}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n</div>\\n\\n<div class=\\\"container-fluid well\\\">\\n    <h1>Past Events</h1>\\n    <div *ngIf=\\\"confirmedEvents\\\">\\n        <div *ngFor=\\\"let event of confirmedEvents; let i = index\\\">\\n            <div *ngIf=\\\"isPastEvent(event.endTime)\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"eventBox\\\">\\n                        <div class=\\\"darkBox\\\" width=\\\"300\\\" height=\\\"200\\\"></div>\\n                        <div class=\\\"eventInfo\\\">\\n                            <div style=\\\"font-size: 18pt;\\\">{{ event.activity }}</div>\\n                        </div>\\n                        <img src={{getActivityUrl(event.activity)}} width=\\\"300\\\" height=\\\"200\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                            <tr>\\n                                <td>Participants</td>\\n                                <td><span *ngFor=\\\"let id of event.invitedIds\\\">{{ getUserName(id) }}<br /></span></td>\\n                            </tr>\\n                            <tr>\\n                                <td>Start Time</td>\\n                                <td>{{ event.startTime | date: 'd MMM yyyy' }}, {{ event.startTime | date: 'hh:mm a' }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>End Time</td>\\n                                <td>{{ event.endTime | date: 'd MMM yyyy' }}, {{ event.endTime | date: 'hh:mm a' }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Location</td>\\n                                <td>{{ event.location }}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"notRated(event.eventId)\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <h3>How was your experience?</h3>\\n                            <p>Rate your fellow B-Active users for this event.</p>\\n                            <table class=\\\"center table table-bordered\\\">\\n                                <tr *ngFor=\\\"let otherId of event.invitedIds; let j = index\\\">\\n                                    <td *ngIf=\\\"otherId == otherParticipant(event.invitedIds)\\\">\\n                                        {{ getUserName(otherParticipant(event.invitedIds)) }}\\n                                    </td>\\n                                    <td *ngIf=\\\"otherId == otherParticipant(event.invitedIds)\\\"><select [(ngModel)]=\\\"ratings[event.eventId.toString() + ' ' + otherId.toString()]\\\">\\n                                        <option *ngFor=\\\"let x of ratingScale\\\" [selected]=\\\"ratings[event.eventId.toString() + ' ' + otherId.toString()] == x\\\">\\n                                        {{x}}</option>\\n                                    </select></td>\\n                                    <td *ngIf=\\\"otherId == otherParticipant(event.invitedIds)\\\"><button class=\\\"btn btn-default\\\" (click)=\\\"rateUser(otherId, event.eventId, ratings[event.eventId.toString() + ' ' + otherId.toString()])\\\"> Rate User </button></td>\\n                                </tr>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserService, Event } from '../user.service';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\n/**\n    * A class representing the component which shows a user's events.\n    * @class EventsComponent\n*/\nexport class EventsComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n    confirmedEvents: Event[];\n    imageMap: IHash = {};\n    ratingScale: number[] = [1, 2, 3, 4, 5];\n    ratedEvents: number[] = [];\n    ratings: JHash = {}; // First argument is eventId + \" \" + rateeId. Value stored in that entry is score.\n\n    /**\n        * Creates a UserService.\n        * @param {UserService} userService The userService.\n    */\n\tconstructor(private userService: UserService) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n        this.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n        this.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n        this.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n        this.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n        this.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n        this.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n        this.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n        this.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n        this.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n        this.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at MatchesComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * Do the same for confirmed events.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\n        this.confirmedEvents = this.userService.getConfirmedEvents();\n        if (this.confirmedEvents == null) {\n            this.userService.fetchConfirmedEvents(this.userId)\n                .subscribe(confirmedEvents => {\n                    this.confirmedEvents = this.userService.getConfirmedEvents();\n                });\n        }\n\t}\n\n    /**\n        * Determines if a date is in the past.\n        * @param {number} endDate The date of the end of the event.\n        * @return {boolean} Whether the date is in the past.\n    */\n    isPastEvent(endDate: number) {\n        let current: number = Date.now();\n        return endDate < current;\n    }\n\n    /**\n        * Gets the URL for the image of the activity.\n        * @param {String} name The name of the activity.\n        * @return {String} The URL for the image of the activity.\n    */\n    getActivityUrl(name: string) {\n        return this.imageMap[name];\n    }\n\n    /**\n        * Gets the name of the user with id userId.\n        * @param {number} userId The ID of the user.\n        * @return {String} The name of the user.\n    */\n    getUserName(userId: number): String {\n        var user: User;\n        user = this.userService.getUser(userId);\n        if (user == null) {\n            return null;\n        }\n        return user.name;\n    }\n\n    /**\n        * Gets the other participant in an event.\n        * @param {Array<number>} userId The IDs of the users in the event.\n        * @return {number} The ID of the other participant in an event.\n    */\n    otherParticipant(invitedIds: number[]): number {\n        if (invitedIds[0] == this.userId) {\n            return invitedIds[1];\n        }\n\n        return invitedIds[0];\n    }\n\n    /**\n        * Determines if this event and user have been rated or not.\n        * @param {number} eventId The ID of the event.\n        * @return {Boolean} True if this event has not been rated for this user.\n    */\n    notRated(eventId: number): boolean {\n        if(this.ratedEvents.indexOf(eventId) > -1) return false;\n\n        for(let i = 0; i < this.user.events.length; i++) {\n\n            if (this.user.events[i].eventId == eventId) {\n                console.log(this.user.events[i].rated.length);\n                if (this.user.events[i].rated.length > 0) {\n                    console.log(this.user.events[i].rated.length);\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n        Allows the user to rate the other user for this event.\n        * @param {number} otherId The ID of the user to be rated.\n        * @param {number} eventId The ID of the event.\n        * @param {number} rating The rating, from 1 to 5.\n    */\n    rateUser(otherId: number, eventId: number, rating: number): void {\n\t\tthis.userService.rateUser(this.userId, otherId, eventId, rating);\n        this.ratedEvents.push(eventId);\n\t}\n}\n\n/**\n    A hashmap interface, from strings (activity names) to strings (image URLs).\n    * @interface IHash\n*/\nexport interface IHash {\n    [details: string] : string;\n}\n\n/**\n    A hashmap interface, from strings (eventId + \" \" + userId) to numbers (ratings).\n    * @interface JHash\n*/\nexport interface JHash {\n    [details: string] : number;\n}\n","module.exports = \"h1, h2 {\\n    font-family: 'Special Elite';\\n}\\n\\nbutton {\\n    font-family: \\\"Special Elite\\\";\\n    margin: 5px;\\n}\\n\\n.well {\\n    background: rgba(225, 243, 250);\\n}\\n\\n.table {\\n    background: white;\\n    border-width: 2px;\\n    border-radius: 5px;\\n    border-color: rgba(195, 230, 243);\\n    font-family: 'Special Elite';\\n}\\n\\nth {\\n    background: rgba(210, 237, 247);\\n}\\n\\nth, td {\\n    height: 50px;\\n    text-align: center;\\n    vertical-align: middle;\\n    border-width: 0px;\\n}\\n\\n/*\\ntable {\\n    border-collapse: collapse;\\n    width: 100%;\\n    background: rgba(239, 239, 245);\\n}\\n\\nth, td {\\n    text-align: left;\\n    padding: 8px;\\n}\\n*/\\n\\ntr:nth-child(even) {background-color: #f2f2f2;}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0Y2hlcy9tYXRjaGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBNkI7Q0FDaEM7O0FBRUQ7SUFDSSw2QkFBNkI7SUFDN0IsWUFBWTtDQUNmOztBQUVEO0lBQ0ksZ0NBQWdDO0NBQ25DOztBQUVEO0lBQ0ksa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsa0NBQWtDO0lBQ2xDLDZCQUE2QjtDQUNoQzs7QUFFRDtJQUNJLGdDQUFnQztDQUNuQzs7QUFFRDtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtDQUNyQjs7QUFDRDs7Ozs7Ozs7Ozs7RUFXRTs7QUFFRixvQkFBb0IsMEJBQTBCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9tYXRjaGVzL21hdGNoZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxLCBoMiB7XG4gICAgZm9udC1mYW1pbHk6ICdTcGVjaWFsIEVsaXRlJztcbn1cblxuYnV0dG9uIHtcbiAgICBmb250LWZhbWlseTogXCJTcGVjaWFsIEVsaXRlXCI7XG4gICAgbWFyZ2luOiA1cHg7XG59XG5cbi53ZWxsIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDIyNSwgMjQzLCAyNTApO1xufVxuXG4udGFibGUge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci13aWR0aDogMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMTk1LCAyMzAsIDI0Myk7XG4gICAgZm9udC1mYW1pbHk6ICdTcGVjaWFsIEVsaXRlJztcbn1cblxudGgge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjEwLCAyMzcsIDI0Nyk7XG59XG5cbnRoLCB0ZCB7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGJvcmRlci13aWR0aDogMHB4O1xufVxuLypcbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjM5LCAyMzksIDI0NSk7XG59XG5cbnRoLCB0ZCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiA4cHg7XG59XG4qL1xuXG50cjpudGgtY2hpbGQoZXZlbikge2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxuIl19 */\"","module.exports = \"<head>\\n    <title>B-Active - Matches</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" integrity=\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\" crossorigin=\\\"anonymous\\\">\\n</head>\\n\\n<div class=\\\"container-fluid well\\\">\\n\\t<h2>Matched Events</h2>\\n\\t<div class=\\\"matched\\\" *ngIf=\\\"user\\\">\\n\\t    <table class=\\\"table table-bordered\\\">\\n\\t        <thead>\\n\\t            <tr>\\n\\t                <th>Activity</th>\\n\\t                <th>Date</th>\\n\\t                <th>Start Time</th>\\n\\t                <th>End Time</th>\\n\\t                <th>Invited</th>\\n\\t                <th>Location</th>\\n\\t                <th>Accept?</th>\\n\\t            </tr>\\n\\t        </thead>\\n\\t            <tr *ngFor=\\\"let event of matchedEvents; let i = index\\\">\\n\\t                <td>{{event.activity}}</td>\\n\\t                <td>{{event.startTime | date: 'd MMM yyyy'}}</td>\\n\\t                <td>{{event.startTime | date: 'hh:mm a'}}</td>\\n\\t                <td>{{event.endTime | date: 'hh:mm a'}}</td>\\n\\t                <td>\\n\\t                \\t<a routerLink=\\\"/profile/{{otherParticipant(event.invitedIds)}}\\\" class=\\\"field\\\">\\n\\t                \\t\\t{{getUserName(otherParticipant(event.invitedIds))}}\\n\\t                \\t</a>\\n\\t                </td>\\n\\t                <td>{{event.location}}</td>\\n\\t                <td>\\n                        <button class=\\\"btn btn-default\\\" (click)=\\\"acceptEvent(event.eventId, userId); console.log('pushed')\\\"> Accept! </button>\\n\\t                    <button class=\\\"btn btn-default\\\" (click)=\\\"declineEvent(event.eventId)\\\"> Decline </button>\\n                    </td>\\n\\t            </tr>\\n\\t    </table>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"container-fluid well\\\">\\n\\t<h2>Pending Events</h2>\\n\\t<div class=\\\"matched\\\" *ngIf=\\\"user\\\">\\n\\t    <table class=\\\"table table-bordered\\\">\\n\\t        <thead>\\n\\t            <tr>\\n\\t                <th>Activity</th>\\n\\t                <th>Date</th>\\n\\t                <th>Start Time</th>\\n\\t                <th>End Time</th>\\n\\t                <th>Invited</th>\\n\\t                <th>Location</th>\\n\\t                <th>Cancel</th>\\n\\t            </tr>\\n\\t        </thead>\\n\\t            <tr *ngFor=\\\"let event of pendingEvents; let i = index\\\">\\n\\t                <td>{{event.activity}}</td>\\n\\t                <td>{{event.startTime | date: 'd MMM yyyy'}}</td>\\n\\t                <td>{{event.startTime | date: 'hh:mm a'}}</td>\\n\\t                <td>{{event.endTime | date: 'hh:mm a'}}</td>\\n\\t                <td>\\n\\t                \\t<a routerLink=\\\"/profile/{{otherParticipant(event.invitedIds)}}\\\" class=\\\"field\\\">\\n\\t                \\t\\t{{getUserName(otherParticipant(event.invitedIds))}}\\n\\t                \\t</a>\\n\\t                </td>\\n\\t                <td>{{event.location}}</td>\\n\\t                <td>\\n                        <button class=\\\"btn btn-default\\\" *ngIf=\\\"hasNotAccepted(event.eventId)\\\" (click)=\\\"acceptEvent(event.eventId, userId)\\\"> Accept! </button>\\n\\t                    <button class=\\\"btn btn-default\\\" (click)=\\\"declineEvent(event.eventId)\\\"> Cancel </button>\\n                    </td>\\n\\t            </tr>\\n\\t    </table>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserService, Event } from '../user.service';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.component.html',\n  styleUrls: ['./matches.component.css']\n})\n/**\n    * A class representing the component which allows the user to see her matches.\n    * @class MatchesComponent\n*/\nexport class MatchesComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n\tmatchedEvents: Event[];\n\tpendingEvents: Event[];\n\tconfirmedEvents: Event[];\n\n    /**\n        * Creates a MatchesComponent.\n        * @param {UserService} userService The userService.\n    */\n\tconstructor(private userService: UserService) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\t}\n\n    /**\n        * Function which runs at MatchesComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * Do the same for matched events, pending events, confirmed events.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.matchedEvents = this.userService.getMatchedEvents();\n\t\tif (this.matchedEvents == null) {\n\t\t\tthis.userService.fetchMatchedEvents(this.userId)\n\t\t\t\t.subscribe(matches => {\n\t\t\t\t\tthis.matchedEvents = this.userService.getMatchedEvents();\n\t\t\t\t\tconsole.log(matches);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.pendingEvents = this.userService.getPendingEvents();\n\t\tif (this.pendingEvents == null) {\n\t\t\tthis.userService.fetchPendingEvents(this.userId)\n\t\t\t\t.subscribe(pending => {\n\t\t\t\t\tthis.pendingEvents = this.userService.getPendingEvents();\n\t\t\t\t\tconsole.log(pending);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.confirmedEvents = this.userService.getConfirmedEvents();\n\t\tif (this.confirmedEvents == null) {\n\t\t\tthis.userService.fetchConfirmedEvents(this.userId)\n\t\t\t\t.subscribe(confirmed => {\n\t\t\t\t\tthis.confirmedEvents = this.userService.getConfirmedEvents();\n\t\t\t\t\tconsole.log(confirmed);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/**\n        * Given a pending event, return true if user has not accepted\n        * @param {number} eventId The ID of the event.\n        * @return {boolean} True if user has not accepted this event.\n    */\n\thasNotAccepted(eventId: number): boolean {\n\t\tfor(let i = 0; i < this.pendingEvents.length; i++) {\n\t\t\tif (eventId == this.pendingEvents[i].eventId) {\n\t\t\t\tif (this.pendingEvents[i].acceptedIds.indexOf(this.userId) > -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n    /**\n        * Gets the name of the user with id userId.\n        * @param {number} userId The ID of the user.\n        * @return {String} The name of the user.\n    */\n\tgetUserName(userId: number): String {\n        var user: User;\n        user = this.userService.getUser(userId);\n        if (user == null) {\n            return null;\n        }\n\n        return user.name;\n    }\n\n    /**\n        * Gets the other participant in an event.\n        * @param {Array<number>} userId The IDs of the users in the event.\n        * @return {number} The ID of the other participant in an event.\n    */\n    otherParticipant(invitedIds: number[]): number {\n    \tif (invitedIds[0] == this.userId) {\n    \t\treturn invitedIds[1];\n    \t}\n\n    \treturn invitedIds[0];\n    }\n\n    /**\n        * Adds the userId to the accepted array. If all invited have accepted,\n    \t* changes the status to confirmed. Otherwise, sets the status of the event\n    \t* to pending or invited.\n        * @param {number} eventId The ID of the event.\n        * @param {number} userId The ID of the user.\n        * @return {Void}\n    */\n\tacceptEvent(eventId: number, userId: number): void {\n\t\t// search through matched\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i < this.matchedEvents.length; i++) {\n\t\t\tif (this.matchedEvents[i].eventId == eventId) {\n\t\t\t\tfound = true;\n\t\t\t\tconsole.log(this.matchedEvents[i]);\n\t\t\t\tlet newEvent: Event = this.matchedEvents[i];\n\t\t\t\tnewEvent.acceptedIds.push(userId);\n\t\t\t\tnewEvent.status = \"pending\";\n\t\t\t\t//this.pendingEvents.push(newEvent);\n\t\t\t\tthis.userService.updateEvent(newEvent);\n\t\t\t\tconsole.log(newEvent);\n\t\t\t\tthis.matchedEvents.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\t// serach through pending. if accepted, this means moved to confirmed\n\t\t\tfor(let i = 0; i < this.pendingEvents.length; i++) {\n\t\t\t\tif (this.pendingEvents[i].eventId == eventId) {\n\t\t\t\t\tlet newEvent: Event = this.pendingEvents[i];\n\t\t\t\t\tnewEvent.acceptedIds.push(userId);\n\t\t\t\t\tnewEvent.status = \"confirmed\";\n\t\t\t\t\tthis.userService.updateEvent(newEvent);\n\t\t\t\t\tthis.pendingEvents.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(eventId);\n\n\t}\n\n    /**\n        * Removes the userId from the accepted array. Sets the status of the event\n    \t* to pending or just matched.\n        * @param {number} eventId The ID of the event.\n        * @return {Void}\n    */\n\tdeclineEvent(eventId: number): void {\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i < this.matchedEvents.length; i++) {\n\t\t\tif (this.matchedEvents[i].eventId == eventId) {\n\t\t\t\tfound = true;\n\t\t\t\tthis.userService.deleteEvent(eventId);\n\t\t\t\tthis.matchedEvents.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\t// serach through pending. if accepted, this means moved to confirmed\n\t\t\tfor(let i = 0; i < this.pendingEvents.length; i++) {\n\t\t\t\tif (this.pendingEvents[i].eventId == eventId) {\n\t\t\t\t\tthis.userService.deleteEvent(eventId);\n\t\t\t\t\tthis.pendingEvents.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" integrity=\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\" crossorigin=\\\"anonymous\\\">\\n</head>\\n\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" *ngIf=\\\"user\\\" routerLink=\\\"/profile/{{user.userId}}\\\">B-Active: {{ user.name }}</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li><a (click)=\\\"handleProfile()\\\">Profile</a></li>\\n      <li><a (click)=\\\"handleEvents()\\\">Events</a></li>\\n      <li><a (click)=\\\"handleMatches()\\\">Matches</a></li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a *ngIf=\\\"user\\\" routerLink=\\\"/profile/{{user.userId}}\\\">Logout</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n// Source: CS144 with Professor Cho, Project 4 JWT code\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n/**\n    * A class representing the navigation bar at the top.\n    * @class NavbarComponent\n*/\nexport class NavbarComponent implements OnInit {\n    private user: User;\n    private userId: number;\n\n    /**\n        * Creates a NavbarComponent.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n    */\n  constructor(\n      private userService: UserService,\n      private router: Router\n  ) {\n      this.userId = parseJWT(document.cookie).userId;\n  }\n\n  /**\n      * Function which runs at EditComponent's initialisation.\n      * Get the user from the API if it has not been fetched.\n      * @return {Void}\n  */\n  ngOnInit() {\n      this.user = this.userService.getUser(this.userId);\n      if (this.user == null) {\n          this.userService.fetchUser()\n              .subscribe(user => {\n                  this.user = this.userService.getUser(this.userId);\n              });\n      }\n  }\n\n  /**\n    * Function which routes to events page when user clicks on events in navbar.\n    * @return {Void}\n  */\n  handleEvents() {\n      this.router.navigate(['/events']);\n  }\n\n  /**\n    * Function which routes to matches page when user clicks on matches in navbar.\n    * @return {Void}\n  */\n  handleMatches () {\n      this.router.navigate(['/matches']);\n  }\n\n  /**\n    * Function which routes to profile page when user clicks on profile in navbar.\n    * @return {Void}\n  */\n  handleProfile () {\n      this.router.navigate([`/profile/${this.userId}`]);\n  }\n\n}\n","module.exports = \"body {\\n    /* background-color: rgba(135, 206, 235); */\\n    background: rgba(195, 231, 245);\\n}\\n\\n.well {\\n    background: rgba(225, 243, 250);\\n}\\n\\nh1, h2 {\\n    font-family: \\\"Special Elite\\\";\\n}\\n\\nbutton {\\n    font-family: \\\"Special Elite\\\";\\n    margin: 5px;\\n}\\n\\n#edit_buttion {\\n    float: right;\\n}\\n\\n.availabilityCell {\\n\\tborder-style: solid;\\n\\tborder-width: 1px;\\n\\tborder-color: #777a7f;\\n\\tbackground-color: #81c48e;\\n}\\n\\n.availability-th {\\n\\tborder-style: solid;\\n\\tborder-width: 1px;\\n\\tborder-color: #777a7f;\\n\\t/*width: 70px;*/\\n\\tpadding: 25px;\\n}\\n\\n.availability-time-th {\\n\\tborder-style: solid;\\n\\tborder-width: 1px;\\n\\tborder-color: #777a7f;\\n\\tpadding: 5px;\\n\\twidth: 12%;\\n}\\n\\n#notFree {\\n\\tbackground-color: #ffffff;\\n}\\n\\n.schedule {\\n\\tpadding-top: 10px;\\n\\tborder-style: solid;\\n\\tborder-width: 0px;\\n\\tborder-color: black;\\n\\theight: 500px;\\n\\twidth: 100%;\\n\\toverflow-y: auto;\\n}\\n\\n.star-rating {\\n\\tdisplay: inline;\\n}\\n\\nh4, h6 {\\n\\tdisplay: inline;\\n}\\n\\nimg {\\n\\twidth: 300px;\\n\\theight: 200px;\\n\\n}\\n\\n.darkBox {\\n\\tbackground-color: #000000;\\n\\topacity: 0.3;\\n\\twidth:300px;\\n\\theight: 200px;\\n\\tposition: absolute;\\n}\\n\\n.activityInfo {\\n\\tcolor: white;\\n\\tposition: absolute;\\n\\tpadding-top: 100px;\\n\\tpadding-left: 10px;\\n}\\n\\n.activityBox {\\n\\tpadding: 10px;\\n\\tdisplay: inline-block;\\n}\\n\\n.activityBoxes {\\n\\tborder-style: solid;\\n\\tborder-width: 0px;\\n\\tborder-color: black;\\n\\twidth: 100%;\\n\\theight: 220px;\\n\\toverflow: auto;\\n\\tpadding: ;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0Q0FBNEM7SUFDNUMsZ0NBQWdDO0NBQ25DOztBQUVEO0lBQ0ksZ0NBQWdDO0NBQ25DOztBQUVEO0lBQ0ksNkJBQTZCO0NBQ2hDOztBQUVEO0lBQ0ksNkJBQTZCO0lBQzdCLFlBQVk7Q0FDZjs7QUFFRDtJQUNJLGFBQWE7Q0FDaEI7O0FBRUQ7Q0FDQyxvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLHNCQUFzQjtDQUN0QiwwQkFBMEI7Q0FDMUI7O0FBRUQ7Q0FDQyxvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLHNCQUFzQjtDQUN0QixnQkFBZ0I7Q0FDaEIsY0FBYztDQUNkOztBQUVEO0NBQ0Msb0JBQW9CO0NBQ3BCLGtCQUFrQjtDQUNsQixzQkFBc0I7Q0FDdEIsYUFBYTtDQUNiLFdBQVc7Q0FDWDs7QUFFRDtDQUNDLDBCQUEwQjtDQUMxQjs7QUFFRDtDQUNDLGtCQUFrQjtDQUNsQixvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixjQUFjO0NBQ2QsWUFBWTtDQUNaLGlCQUFpQjtDQUNqQjs7QUFFRDtDQUNDLGdCQUFnQjtDQUNoQjs7QUFDRDtDQUNDLGdCQUFnQjtDQUNoQjs7QUFFRDtDQUNDLGFBQWE7Q0FDYixjQUFjOztDQUVkOztBQUVEO0NBQ0MsMEJBQTBCO0NBQzFCLGFBQWE7Q0FDYixZQUFZO0NBQ1osY0FBYztDQUNkLG1CQUFtQjtDQUNuQjs7QUFDRDtDQUNDLGFBQWE7Q0FDYixtQkFBbUI7Q0FDbkIsbUJBQW1CO0NBQ25CLG1CQUFtQjtDQUNuQjs7QUFFRDtDQUNDLGNBQWM7Q0FDZCxzQkFBc0I7Q0FDdEI7O0FBRUQ7Q0FDQyxvQkFBb0I7Q0FDcEIsa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixZQUFZO0NBQ1osY0FBYztDQUNkLGVBQWU7Q0FDZixVQUFVO0NBQ1YiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM1LCAyMDYsIDIzNSk7ICovXG4gICAgYmFja2dyb3VuZDogcmdiYSgxOTUsIDIzMSwgMjQ1KTtcbn1cblxuLndlbGwge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjI1LCAyNDMsIDI1MCk7XG59XG5cbmgxLCBoMiB7XG4gICAgZm9udC1mYW1pbHk6IFwiU3BlY2lhbCBFbGl0ZVwiO1xufVxuXG5idXR0b24ge1xuICAgIGZvbnQtZmFtaWx5OiBcIlNwZWNpYWwgRWxpdGVcIjtcbiAgICBtYXJnaW46IDVweDtcbn1cblxuI2VkaXRfYnV0dGlvbiB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uYXZhaWxhYmlsaXR5Q2VsbCB7XG5cdGJvcmRlci1zdHlsZTogc29saWQ7XG5cdGJvcmRlci13aWR0aDogMXB4O1xuXHRib3JkZXItY29sb3I6ICM3NzdhN2Y7XG5cdGJhY2tncm91bmQtY29sb3I6ICM4MWM0OGU7XG59XG5cbi5hdmFpbGFiaWxpdHktdGgge1xuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xuXHRib3JkZXItd2lkdGg6IDFweDtcblx0Ym9yZGVyLWNvbG9yOiAjNzc3YTdmO1xuXHQvKndpZHRoOiA3MHB4OyovXG5cdHBhZGRpbmc6IDI1cHg7XG59XG5cbi5hdmFpbGFiaWxpdHktdGltZS10aCB7XG5cdGJvcmRlci1zdHlsZTogc29saWQ7XG5cdGJvcmRlci13aWR0aDogMXB4O1xuXHRib3JkZXItY29sb3I6ICM3NzdhN2Y7XG5cdHBhZGRpbmc6IDVweDtcblx0d2lkdGg6IDEyJTtcbn1cblxuI25vdEZyZWUge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uc2NoZWR1bGUge1xuXHRwYWRkaW5nLXRvcDogMTBweDtcblx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcblx0Ym9yZGVyLXdpZHRoOiAwcHg7XG5cdGJvcmRlci1jb2xvcjogYmxhY2s7XG5cdGhlaWdodDogNTAwcHg7XG5cdHdpZHRoOiAxMDAlO1xuXHRvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uc3Rhci1yYXRpbmcge1xuXHRkaXNwbGF5OiBpbmxpbmU7XG59XG5oNCwgaDYge1xuXHRkaXNwbGF5OiBpbmxpbmU7XG59XG5cbmltZyB7XG5cdHdpZHRoOiAzMDBweDtcblx0aGVpZ2h0OiAyMDBweDtcblxufVxuXG4uZGFya0JveCB7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG5cdG9wYWNpdHk6IDAuMztcblx0d2lkdGg6MzAwcHg7XG5cdGhlaWdodDogMjAwcHg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cbi5hY3Rpdml0eUluZm8ge1xuXHRjb2xvcjogd2hpdGU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cGFkZGluZy10b3A6IDEwMHB4O1xuXHRwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbi5hY3Rpdml0eUJveCB7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmFjdGl2aXR5Qm94ZXMge1xuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xuXHRib3JkZXItd2lkdGg6IDBweDtcblx0Ym9yZGVyLWNvbG9yOiBibGFjaztcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMjIwcHg7XG5cdG92ZXJmbG93OiBhdXRvO1xuXHRwYWRkaW5nOiA7XG59XG4iXX0= */\"","module.exports = \"<head>\\n    <title>B-Active - Profile</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n</head>\\n\\n<div class=\\\"container-fluid well\\\">\\n\\n<div *ngIf=\\\"user\\\">\\n    <h1>{{ user.name }}'s Profile</h1>\\n    <p><button *ngIf=\\\"!publicView\\\" id=\\\"edit_button\\\" class=\\\"btn btn-default\\\" (click)=\\\"handleEdit()\\\">Edit Profile</button></p>\\n</div>\\n\\n</div>\\n<div class=\\\"container-fluid well\\\">\\n\\n<div *ngIf=\\\"user\\\">\\n    <h4>Email: {{ user.email }} </h4>\\n</div>\\n\\n<div class=\\\"user-rating\\\" *ngIf=\\\"user\\\">\\n    <h4>Rating: </h4>\\n    <div class=\\\"star-rating\\\" *ngFor=\\\"let rating of calculateRating()\\\">\\n        <span class=\\\"fa fa-star\\\"></span>\\n    </div>\\n    <h6> ({{user.rating.numRatings}})</h6>\\n</div>\\n\\n</div>\\n<div class=\\\"container-fluid well\\\">\\n\\n<h2>Activities</h2>\\n<div class = \\\"activityBoxes\\\" *ngIf=\\\"user\\\">\\n    <div class=\\\"activityBox\\\" *ngFor=\\\"let activity of user.activities\\\">\\n        <div class=\\\"darkBox\\\" width=\\\"300\\\" height=\\\"200\\\">\\n        </div>\\n\\n        <div class=\\\"activityInfo\\\">\\n            <div style=\\\"font-size: 18pt;\\\">{{ activity.name }}</div><br>\\n            Interest: {{ activity.interest }}<br>\\n            Skill: {{ activity.skill }}\\n        </div>\\n\\n        <img src={{getActivityUrl(activity.name)}} width=\\\"300\\\" height=\\\"200\\\">\\n    </div>\\n</div>\\n\\n</div>\\n<div class=\\\"container-fluid well\\\">\\n\\n<h2>Availability</h2>\\n<div class=\\\"schedule\\\" *ngIf=\\\"user\\\">\\n\\n    <table style=\\\"border: 1px solid #777a7f; border-spacing: 0px; width:100%;\\\" cellspacing=\\\"0\\\" >\\n        <thead>\\n            <tr bgcolor=\\\"#5e99d1\\\">\\n                <th class=\\\"availability-th\\\"></th>\\n                <th class=\\\"availability-th\\\">Monday</th>\\n                <th class=\\\"availability-th\\\">Tuesday</th>\\n                <th class=\\\"availability-th\\\">Wednesday</th>\\n                <th class=\\\"availability-th\\\">Thursday</th>\\n                <th class=\\\"availability-th\\\">Friday</th>\\n                <th class=\\\"availability-th\\\">Saturday</th>\\n                <th class=\\\"availability-th\\\">Sunday</th>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let time of user.availability[0]; let i = index;\\\">\\n            <th class=\\\"availability-time-th\\\" bgcolor=\\\"#5e99d1\\\">\\n                {{ this.tableHeadings[i] }}\\n            </th>\\n            <ng-container *ngFor=\\\"let day of user.availability; let j = index;\\\">\\n                <td class=\\\"availabilityCell\\\" id=\\\"free\\\" *ngIf=\\\"user.availability[j][i]\\\"></td>\\n                <td class=\\\"availabilityCell\\\" id=\\\"notFree\\\" *ngIf=\\\"!user.availability[j][i]\\\"></td>\\n            </ng-container>\\n        </tr>\\n    </table>\\n</div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n    * Parses a JSON Web Token.\n    * Source: CS144 with Professor Cho, Project 4 JWT code\n    * @param {Object} token A JSON Web Token.\n    * @return {String} The parsed JSON Web Token, as a string.\n*/\nfunction parseJWT(token)\n{\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n}\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.css']\n})\n/**\n    * A class representing the component which allows the user to edit her profile.\n    * @class ProfileComponent\n*/\nexport class ProfileComponent implements OnInit {\n\tuser: User;\n\tuserId: number;\n\ttableHeadings: string[] = [];\n\timageMap: IHash = {};\n\tpublicView: boolean = false;\n\n    /**\n        * Creates a ProfileComponent.\n        * Also fills the imageMap hash-map.\n        * @param {UserService} userService The userService.\n        * @param {Router} router The router.\n        * @param {ActivedRoute} route The activated route.\n    */\n\tconstructor(private userService: UserService,\n\t\tprivate router: Router,\n\t\tprivate route : ActivatedRoute) {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// If the link that led to the profile page is from /profile, display the public view\n\t\tif ( this.route.snapshot.url.length > 0) {\n\t\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\t\tif (id != null && id != this.userId) {\n\t\t\t\tthis.userId = id;\n\t\t\t\tthis.publicView = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.imageMap[\"Lifting\"] = \"https://static1.squarespace.com/static/53de6926e4b06edf127b3ecd/t/56c51cb6555986ef347ae6ba/1455758525694/\";\n\t\tthis.imageMap[\"Running\"] = \"http://lisabaylis.com/wp/wp-content/uploads/2017/07/running.jpg\";\n\t\tthis.imageMap[\"Swimming\"] = \"https://cdn.swimswam.com/wp-content/uploads/2018/02/stock-by-Mike-Lewis-LDM_1946.jpg\";\n\t\tthis.imageMap[\"Basketball\"] = \"https://ak5.picdn.net/shutterstock/videos/18113245/thumb/1.jpg\";\n\t\tthis.imageMap[\"Soccer\"] = \"http://www.bagnet.org/storage/05/17/23/16/729_486_5936517d8d288.jpg\";\n\t\tthis.imageMap[\"Tennis\"] = \"https://tennisracquetcentral.com/wp-content/uploads/2018/02/Tennis-Balls.jpg\";\n\t\tthis.imageMap[\"Volleyball\"] = \"https://www.longbeachny.gov/vertical/Sites/%7BC3C1054A-3D3A-41B3-8896-814D00B86D2A%7D/uploads/bigstock-Beach-Volleyball-Silhouette-81799844_(1).jpg\";\n\t\tthis.imageMap[\"Climbing\"] = \"http://yourboulder.com/wp-content/uploads/2013/02/adult-courses1-e1360807803429.jpg\";\n\t\tthis.imageMap[\"Squash\"] = \"https://data.englandsquash.com/files?fileName=0600776f-047c-4853-92f2-bb6a87601341.jpg\";\n\t\tthis.imageMap[\"Frisbee\"] = \"https://childlikefaith.com/wp-content/uploads/2015/10/ultimate-frisbee-catch.jpg\";\n\t}\n\n    /**\n        * Function which runs at EditComponent's initialisation.\n        * Get the user from the API if it has not been fetched.\n        * @return {Void}\n    */\n\tngOnInit() {\n\t\tthis.userId = parseJWT(document.cookie).userId;\n\n\t\t// + converts to a number\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tif (id != null && id != this.userId) {\n\t\t\tthis.userId = id;\n\t\t\tthis.publicView = true;\n\t\t}\n\t\tthis.fillTableHeadings();\n\t\tthis.user = this.userService.getUser(this.userId);\n\t\tif (this.user == null) {\n\t\t\tthis.userService.fetchUser()\n\t\t\t\t.subscribe(user => {\n\t\t\t\t\tthis.user = this.userService.getUser(this.userId);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n        * Populates the availability table with half-hour times.\n        * @return {Void}\n    */\n\tfillTableHeadings(): void {\n\t\tlet hour = 0;\n\t\tlet minutes = \"00\";\n\n\t\tfor (let i = 0; i < 48; i ++) {\n\t\t\tthis.tableHeadings.push(`${hour}:${minutes}`);\n\t\t\thour = (i % 2 == 1) ? hour + 1 : hour;\n\t\t\tminutes = (minutes == \"00\") ? \"30\" : \"00\";\n\t\t}\n\t}\n\n    /**\n        * Calculates the rating of the user.\n        * @return {Array} An array of numbers, of length 5, for which the appropriate number of entries are full.\n    */\n\tcalculateRating() {\n\t\tlet ratings = this.user.rating;\n\t\tif (ratings.numRatings === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet avg = Math.ceil(ratings.scoreSum / ratings.numRatings);\n\t\treturn Array(avg).fill(5);\n\t}\n\n    /**\n        * Gets the URL for the image of the activity.\n        * @param {String} name The name of the activity.\n        * @return {String} The URL for the image of the activity.\n    */\n\tgetActivityUrl(name: string) {\n\t\treturn this.imageMap[name];\n\t}\n\n    /**\n      * Function which routes to edit page when user clicks on edit in navbar.\n      * @return {Void}\n    */\n    handleEdit() {\n        this.router.navigate(['/edit']);\n    }\n}\n\nexport interface IHash {\n    [details: string] : string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json'});\nconst options = {headers, responseType: 'text' as 'text'};\n\n/**\n    * A class representing an activity.\n    * @class Activity\n*/\nexport class Activity {\n\tname: string;\n\tinterest: number;\n\tskill: number;\n}\n\n/**\n    * A class representing an event.\n    * @class Event\n*/\nexport class Event {\n\teventId: number;\n\tacceptedIds: number[];\n\tinvitedIds: number[];\n\tactivity: string;\n\tstartTime: Date;\n\tendTime: Date;\n\tstatus: string;\n\tlocation: string;\n}\n\n/**\n    * A class representing a user.\n    * @class User\n*/\nexport class User {\n\tuserId: number;\n\temail: string;\n\tname: string;\n\trating: {\n\t\tscoreSum: number;\n\t\tnumRatings: number;\n\t};\n\tactivities: Activity[];\n\tavailability: boolean[][];\n\tevents: {eventId: number, rated: number[]}[];\n}\n\n/**\n    * A class representing a match.\n    * @class Match\n*/\nexport class Match {\n\tevent: string;\n\tscore: number;\n\tmatch_id: number;\n\tmatch_name: string;\n\tmatch_email: string;\n\ttime: number[];\n\tunix_time: Date;\n\tlocation: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n    * A class which provides user functionalities, and calls to the API.\n    * @class UserService\n*/\nexport class UserService {\n\tprivate users: User[];\n\tprivate events: Event[];\n\tprivate matchedEvents: Event[];\n\tprivate confirmedEvents: Event[];\n\tprivate pendingEvents: Event[];\n\tprivate apiUrl = 'http://localhost:3000/api';\n\tprivate matchUrl = 'http://localhost:3000/match';\n\n\t/**\n        * Creates a UserService object.\n        * @param {HttpClient} http The HTTP client.\n    */\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t\t* Initial call to User Service to populate array users.\n\t\t* Calls the following server-side API: GET /api/users.\n\t\t* @return {Observable<any>} An Observable object that promises population of user array once API request finishes.\n\t*/\n\tfetchUser(): Observable<any> {\n\t\tconst url = `${this.apiUrl}/users`;\n\n\t\treturn this.http.get<User[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.users = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns user with given userId if it exists in users array.\n\t\t* If no user with given userId found, returns null instead.\n\t\t* @param {number} userId The express routing HTTP client request object.\n\t\t* @return {User} The User object with the matching userId, or null if none found.\n\t*/\n\tgetUser(userId: number): User {\n\t\tif (this.users === undefined || this.users === null || this.users.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.users.find(cur => cur.userId === userId);\n\t}\n\n\t/**\n\t\t* Initial call to populate events array with events that user with id userId is invited to.\n\t\t* Calls the following server-side API: GET /api/events/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable<Event[]>} An Observable object that promises population of events array once API request finishes.\n\t*/\n\tfetchEvents(userId: number): Observable<Event[]> {\n\t\tconst url = `${this.apiUrl}/events/${userId}`;\n\n\t\treturn this.http.get<Event[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.events = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns events array, which contains events that user that's using this User Service was invited to.\n\t\t* Requires call to fetchEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user was invited to.\n\t*/\n\tgetEvents(): Event[] {\n\t\treturn this.events;\n\t}\n\n\t/**\n\t\t* Initial call to populate matchedEvents array with events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/matchedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable<Event[]>} An Observable object that promises population of matchedEvents array once API request finishes.\n\t*/\n\tfetchMatchedEvents(userId: number): Observable<Event[]> {\n\t\tconst url = `${this.apiUrl}/matchedevents/${userId}`;\n\n\t\treturn this.http.get<Event[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.matchedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns matchedEvents array, which contains events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchMatchedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of events that the user has been matched to.\n\t*/\n\tgetMatchedEvents(): Event[] {\n\t\treturn this.matchedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate confirmedEvents array with confirmed events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/confirmedevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable<Event[]>} An Observable object that promises population of confirmedEvents array once API request finishes.\n\t*/\n\tfetchConfirmedEvents(userId: number): Observable<Event[]> {\n\t\tconst url = `${this.apiUrl}/confirmedevents/${userId}`;\n\n\t\treturn this.http.get<Event[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.confirmedEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains confirmed events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchConfirmedEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of confirmed events that the user has been matched to.\n\t*/\n\tgetConfirmedEvents(): Event[] {\n\t\treturn this.confirmedEvents;\n\t}\n\n\t/**\n\t\t* Initial call to populate pendingEvents array with pending events that user with id userId has been matched to.\n\t\t* Calls the following server-side API: GET /api/pendingevents/:userId.\n\t\t* @param {number} userId The userId whose events we are searching for.\n\t\t* @return {Observable<Event[]>} An Observable object that promises population of pendingEvents array once API request finishes.\n\t*/\n\tfetchPendingEvents(userId: number): Observable<Event[]> {\n\t\tconst url = `${this.apiUrl}/pendingevents/${userId}`;\n\n\t\treturn this.http.get<Event[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.pendingEvents = res;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Returns confirmedEvents array, which contains pending events that user that's using this User Service has been matched to.\n\t\t* Requires call to fetchPendingEvents(userId: number) prior to execution for correct output.\n\t\t* @return {Event[]} The array of pending events that the user has been matched to.\n\t*/\n\tgetPendingEvents(): Event[] {\n\t\treturn this.pendingEvents;\n\t}\n\n\t/**\n\t\t* Finds best matches of current user, then creates corresponding events and populates server.\n\t\t* Calls the following server-side APIs: GET /match/:userId, POST /event/:userId.\n\t\t* @param {number} userId The userId whose matches we are computing.\n\t\t* @return {Observable<Event[]>} An Observable object that promises population of events collection with appropriate events.\n\t*/\n\tfetchMatches(userId: number): Observable<Match[]> {\n\t\tconst url = `${this.matchUrl}/${userId}`;\n\n\t\treturn this.http.get<Match[]>(url).pipe(\n\t\t\ttap(res => {\n\t\t\t\tfor (let match of res) {\n\t\t\t\t\tlet event: Event = {\n\t\t\t\t\t\teventId: 0,\n\t\t\t\t\t\tacceptedIds: [],\n\t\t\t\t\t\tinvitedIds: [match.match_id, userId],\n\t\t\t\t\t\tactivity: match.event,\n\t\t\t\t\t\tstartTime: match.unix_time,\n\t\t\t\t\t\tendTime: new Date(match.unix_time.getSeconds() + 180),\n\t\t\t\t\t\tstatus: \"matched\",\n\t\t\t\t\t\tlocation: match.location\n\t\t\t\t\t};\n\t\t\t\t\tthis.http.post<Event>(`${this.apiUrl}/event/${userId}`, event).subscribe();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Updates name of user with user id userId to newName.\n\t\t* Calls the following server-side API: PUT /name/:userId, body: {name: newName}\n\t\t* @param {number} userId The userId whose name we are changing.\n\t\t* @param {string} newName The updated name that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tchangeName(userId: number, newName: string): void {\n\t\tconst url = `${this.apiUrl}/name/${userId}`;\n\t\tvar insert = {name: newName};\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates activities array of user with user id userId to input array activities.\n\t\t* Calls the following server-side API: PUT /activity/:userId, body: {activity: activities}\n\t\t* @param {number} userId The userId whose activities we are updating.\n\t\t* @param {Activity[]} activities The updated array of activities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateActivities(userId: number, activities: Activity[]): void {\n\t\tconst url = `${this.apiUrl}/activity/${userId}`;\n\t\tvar insert = {activity: activities};\n\t\tthis.http.post(url, insert).subscribe();\n\t}\n\n\t/**\n\t\t* Updates availabilities array of user with user id userId to input array availabilities.\n\t\t* Calls the following server-side API: PUT /availability/:userId, body: {availability: availabilities}\n\t\t* @param {number} userId The userId whose availabilities we are updating.\n\t\t* @param {boolean[][]} activities The updated array (7 by 48) of availabilities that we are setting for user with user id userId.\n\t\t* @return {void}\n\t*/\n\tupdateAvailability(userId: number, availabilities: boolean[][]): void {\n\t\tconst url = `${this.apiUrl}/availability/${userId}`;\n\t\tvar insert = {availability: availabilities};\n\t\tconsole.log(insert);\n\t\tthis.http.put(url, insert).pipe(\n\t\t\ttap(res => {\n\t\t\t\tthis.fetchMatches(userId);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t\t* Deletes event from database with event id removeEventId. Deletes event from matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: DELETE /event/:removeEventId.\n\t\t* @param {number} removeEventId The event id of the event we are deleting.\n\t\t* @return {void}\n\t*/\n\tdeleteEvent(removeEventId: number): void {\n\t\tconst url = `${this.apiUrl}/event/${removeEventId}`;\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i < this.matchedEvents.length; i++) {\n\t\t\tif (this.matchedEvents[i].eventId == removeEventId) {\n\t\t\t\tfound = true;\n\t\t\t\tthis.matchedEvents.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\tfor(let i = 0; i < this.pendingEvents.length; i++) {\n\t\t\t\tif (this.pendingEvents[i].eventId == removeEventId) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tthis.pendingEvents.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\tfor(let i = 0; i < this.confirmedEvents.length; i++) {\n\t\t\t\tif (this.confirmedEvents[i].eventId == removeEventId) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tthis.confirmedEvents.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.http.delete(url, options).subscribe();\n\t\tconsole.log('deleting event');\n\t}\n\n\t/**\n\t\t* Updates event in database whose event id matches updatedEvent.eventId. Updates matchedEvents, pendingEvents, and confirmedEvents arrays.\n\t\t* Calls the following server-side API: PUT /event/:updatedEvent.eventId, body: {event: updatedEvent}\n\t\t* @param {Event} updatedEvent The updated event that we are sending to the server.\n\t\t* @return {void}\n\t*/\n\tupdateEvent(updatedEvent: Event): void {\n\t\tconst url = `${this.apiUrl}/event/${updatedEvent.eventId}`;\n\t\tvar update = {event: updatedEvent};\n\n\t\tlet found: boolean = false;\n\t\tfor(let i = 0; i < this.matchedEvents.length; i++) {\n\t\t\tif (this.matchedEvents[i].eventId == updatedEvent.eventId) {\n\t\t\t\tfound = true;\n\t\t\t\tthis.pendingEvents.push(updatedEvent);\n\t\t\t\tthis.matchedEvents.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\tfor(let i = 0; i < this.pendingEvents.length; i++) {\n\t\t\t\tif (this.pendingEvents[i].eventId == updatedEvent.eventId) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tthis.confirmedEvents.push(updatedEvent);\n\t\t\t\t\tthis.pendingEvents.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.http.put(url, update).subscribe();\n\t\tconsole.log('updating event');\n\t}\n\n\t/**\n\t\t* Allows user to rate another user for an event.\n\t\t* Calls the following server-side API: PUT /rate/:userId, body: {ratee: otherId, eventId: eventId, score: rating}\n\t\t* @param {number} userId The user who is doing the rating.\n\t\t* @param {number} otherId The user who is being rated.\n\t\t* @param {number} eventId The event that the rating is being done for.\n\t\t* @param {number} rating The rating that the user is giving.\n\t\t* @return {void}\n\t*/\n\trateUser(userId: number, otherId: number, eventId: number, rating: number): void {\n\t\tconst url = `${this.apiUrl}/rate/${userId}`;\n\t\tvar insert = {\n\t\t\tratee: otherId,\n\t\t\teventId: eventId,\n\t\t\tscore: rating\n\t\t}\n\t\tthis.http.put(url, insert).subscribe();\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}